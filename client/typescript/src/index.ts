
// Code generated by @open-rpc/generator DO NOT EDIT.
import { RequestManager, PostMessageWindowTransport, PostMessageIframeTransport, WebSocketTransport, HTTPTransport, Client, JSONRPCError } from "@open-rpc/client-js";
import _ from "lodash";
import { OpenrpcDocument as OpenRPC, MethodObject, ContentDescriptorObject } from "@open-rpc/meta-schema";
import { MethodCallValidator, MethodNotFoundError } from "@open-rpc/schema-utils-js";

/**
 *
 * patp-encoded string with leading ~
 *
 * @default ~wanzod
 *
 */
export type Patp = string;
/**
 *
 * number representing a patp
 *
 */
export type Number = number;
/**
 *
 * An Azimuth Ship
 *
 */
export type Ship = Patp | Number;
export type OwnershipAddress = string;
export type SpawnProxy = string;
export type VotingProxy = string;
export type ManagementProxy = string;
export type TransferProxy = string;
export type Proxy = OwnershipAddress | SpawnProxy | VotingProxy | ManagementProxy | TransferProxy;
/**
 *
 * hex encoded address
 *
 */
export type EthAddress = string;
export type Reset = boolean;
export type StringDoaGddGA = string;
export type NumberHo1ClIqD = number;
export type Breach = boolean;
export interface TransferPointParams {
  address: EthAddress;
  reset?: Reset;
  [k: string]: any;
}
export interface SpawnParams {
  address: EthAddress;
  ship: Ship;
  [k: string]: any;
}
export interface ConfigureKeysParams {
  encrypt: StringDoaGddGA;
  auth: StringDoaGddGA;
  cryptoSuite: NumberHo1ClIqD;
  breach: Breach;
  [k: string]: any;
}
export interface SponsorshipParams {
  ship: Ship;
  [k: string]: any;
}
export interface AddressParams {
  address: EthAddress;
  [k: string]: any;
}
/**
 *
 * One of: l1, l2, spawn
 *
 */
export type Dominion = string;
export type Life = number;
export type Suite = number;
export type Auth = string;
export type Crypto = string;
export interface Keys {
  life: Life;
  suite: Suite;
  auth: Auth;
  crypto: Crypto;
  [k: string]: any;
}
export type Rift = number;
export type Forced = boolean;
export interface Sponsor {
  has?: Forced;
  who?: StringDoaGddGA;
  [k: string]: any;
}
export interface Networking {
  keys: Keys;
  rift: Rift;
  sponsor: Sponsor;
  escape?: Ship;
  [k: string]: any;
}
export type Nonce = number;
export interface Address {
  address?: EthAddress;
  nonce?: Nonce;
  [k: string]: any;
}
export interface Ownership {
  owner?: Address;
  spawnProxy?: Address;
  managementProxy?: Address;
  votingProxy?: Address;
  transferProxy?: Address;
  [k: string]: any;
}
/**
 *
 * Hex-encoded signature
 *
 */
export type Signature = string;
/**
 *
 * Ship that sends the transaction and type of Ethereum address that controls it
 *
 */
export interface From {
  ship: Ship;
  proxy: Proxy;
  [k: string]: any;
}
export type L2TransactionCommonParams = ConfigureKeysParams | SpawnParams | ConfigureKeysParams | SponsorshipParams | AddressParams;
/**
 *
 * Raw L2 transaction as defined in /lib/naive.hoon
 *
 */
export interface L2Transaction {
  sig: Signature;
  from: From;
  tx: L2TransactionCommonParams;
  [k: string]: any;
}
/**
 *
 * Pending transaction in the Roller, waiting to be submitted to Ethereum
 *
 */
export interface PendingTransaction {
  forced: Forced;
  tx: L2Transaction;
  address: EthAddress;
  [k: string]: any;
}
/**
 *
 * Ship encoded as a patp without leading sig
 *
 */
export type ShipName = string;
export interface SpawnedPoint {
  address?: EthAddress;
  ship?: ShipName;
  [k: string]: any;
}
/**
 *
 * One of: confirmed, pending, sending, confirmed, failed, unknown
 *
 */
export type TransactionStatus = string;
/**
 *
 * One of transfer-point, spawn, configure-keys, escape, cancel-escape, adopt, reject, detach, set-management-proxy, set-spawn-proxy, set-transfer-proxy
 *
 */
export type TransactionType = string;
export type Hash32 = string;
export interface TransactionHistoryData {
  ship?: Ship;
  status?: TransactionStatus;
  type?: TransactionType;
  hash?: Hash32;
  [k: string]: any;
}
/**
 *
 * Timestamp of when the next roll of L2 txs will be sent out
 *
 */
export type NextBatch = number;
/**
 *
 * How often the Roller sends out a new batch
 *
 */
export type Frequency = number;
/**
 *
 * How ofthen the Roller updates its state
 *
 */
export type RefreshTime = number;
/**
 *
 * For more info: https://chainid.network/
 *
 */
export type ChainId = number;
export type DNS = string;
/**
 *
 * Data requiered for a L2 Transaction
 *
 */
export type L2Data = TransferPointParams | SpawnParams | ConfigureKeysParams | SponsorshipParams | AddressParams;
export interface L2Point {
  dominion?: Dominion;
  networking?: Networking;
  ownership?: Ownership;
  [k: string]: any;
}
export type Ships = Ship[];
/**
 *
 * Keccak-256 (not the standardized SHA3-256) of the given data.
 *
 */
export type Hash = string;
export type ListOfPendingTxs = PendingTransaction[];
export type SpawnedPoints = SpawnedPoint[];
export type AddressHistory = TransactionHistoryData[];
/**
 *
 * Always returns "ok"
 *
 */
export type Success = string;
/**
 *
 * A Roller Config
 *
 */
export interface Config {
  nextBatch: NextBatch;
  frequency: Frequency;
  refreshTime: RefreshTime;
  chainId: ChainId;
  contract: EthAddress;
  [k: string]: any;
}
/**
 *
 * A list of DNS
 *
 */
export type ListOfDNS = DNS[];
/**
 *
 * Generated! Represents an alias to any of the provided schemas
 *
 */
export type AnyOfShipEthAddressSignatureFromEthAddressTransferPointParamsSignatureFromEthAddressSpawnParamsSignatureFromEthAddressConfigureKeysParamsSignatureFromEthAddressSponsorshipParamsSignatureFromEthAddressSponsorshipParamsSignatureFromEthAddressSponsorshipParamsSignatureFromEthAddressSponsorshipParamsSignatureFromEthAddressSponsorshipParamsSignatureFromEthAddressAddressParamsSignatureFromEthAddressAddressParamsSignatureFromEthAddressAddressParamsShipEthAddressShipHash32EthAddressSignatureHash32TransactionTypeShipNonceFromTransactionTypeL2DataEthAddressEthAddressEthAddressEthAddressEthAddressL2PointShipsHashHashHashHashHashHashHashHashHashHashHashListOfPendingTxsListOfPendingTxsListOfPendingTxsSpawnedPointsNextBatchTransactionStatusAddressHistoryNonceSuccessConfigListOfDNSHashShipsShipsShipsShipsShips = Ship | EthAddress | Signature | From | TransferPointParams | SpawnParams | ConfigureKeysParams | SponsorshipParams | AddressParams | Hash32 | TransactionType | Nonce | L2Data | L2Point | Ships | Hash | ListOfPendingTxs | SpawnedPoints | NextBatch | TransactionStatus | AddressHistory | Success | Config | ListOfDNS;
export type GetPoint = (ship: Ship) => Promise<L2Point>;
export type GetShips = (address: EthAddress) => Promise<Ships>;
export type TransferPoint = (sig: Signature, from: From, address: EthAddress, data: TransferPointParams) => Promise<Hash>;
export type Spawn = (sig: Signature, from: From, address: EthAddress, data: SpawnParams) => Promise<Hash>;
export type ConfigureKeys = (sig: Signature, from: From, address: EthAddress, data: ConfigureKeysParams) => Promise<Hash>;
export type Escape = (sig: Signature, from: From, address: EthAddress, data: SponsorshipParams) => Promise<Hash>;
export type CancelEscape = (sig: Signature, from: From, address: EthAddress, data: SponsorshipParams) => Promise<Hash>;
export type Adopt = (sig: Signature, from: From, address: EthAddress, data: SponsorshipParams) => Promise<Hash>;
export type Detach = (sig: Signature, from: From, address: EthAddress, data: SponsorshipParams) => Promise<Hash>;
export type Reject = (sig: Signature, from: From, address: EthAddress, data: SponsorshipParams) => Promise<Hash>;
export type SetManagementProxy = (sig: Signature, from: From, address: EthAddress, data: AddressParams) => Promise<Hash>;
export type SetSpawnProxy = (sig: Signature, from: From, address: EthAddress, data: AddressParams) => Promise<Hash>;
export type SetTransferProxy = (sig: Signature, from: From, address: EthAddress, data: AddressParams) => Promise<Hash>;
export type GetAllPending = () => Promise<ListOfPendingTxs>;
export type GetPendingByShip = (ship: Ship) => Promise<ListOfPendingTxs>;
export type GetPendingByAddress = (address: EthAddress) => Promise<ListOfPendingTxs>;
export type GetSpawned = (ship: Ship) => Promise<SpawnedPoints>;
export type WhenNextBatch = () => Promise<NextBatch>;
export type GetTransactionStatus = (hash: Hash32) => Promise<TransactionStatus>;
export type GetHistory = (address: EthAddress) => Promise<AddressHistory>;
export type GetNonce = () => Promise<Nonce>;
export type CancelTransaction = (sig: Signature, hash: Hash32, type: TransactionType, ship: Ship) => Promise<Success>;
export type GetRollerConfig = () => Promise<Config>;
export type GetDns = () => Promise<ListOfDNS>;
export type HashTransaction = (nonce: Nonce, from: From, tx: TransactionType, data: L2Data) => Promise<Hash>;
export type GetOwnedPoints = (address: EthAddress) => Promise<Ships>;
export type GetTransferringFor = (address: EthAddress) => Promise<Ships>;
export type GetManagerFor = (address: EthAddress) => Promise<Ships>;
export type GetVotingFor = (address: EthAddress) => Promise<Ships>;
export type GetSpawningFor = (address: EthAddress) => Promise<Ships>;

export interface Options {
  transport: {
    type: "websocket" | "http" | "https" | "postmessagewindow" | "postmessageiframe";
    host: string;
    port: number;
    path?: string;
    protocol?: string;
  },
}

export class RollerRPCAPI {
  public rpc: Client;
  public static openrpcDocument: OpenRPC = {"openrpc":"1.2.6","info":{"version":"0.0.1","title":"Roller RPC API","license":{"name":"MIT"}},"servers":[{"url":"http://localhost:8080/v1/roller","name":"Local","description":"This assumes `%aggregator-rpc.hoon` running on a test ship"}],"methods":[{"name":"getPoint","summary":"Retrieves Azimuth Point data for a specific ship","tags":[{"name":"point"}],"paramStructure":"by-name","params":[{"name":"ship","description":"The @p of the planet (e.g. `~sampel-planet` or 256)","schema":{"title":"Ship","description":"An Azimuth Ship","anyOf":[{"type":"string","title":"Patp","default":"~wanzod","description":"patp-encoded string with leading ~"},{"type":"number","title":"Number","description":"number representing a patp"}]}}],"result":{"name":"point","description":"Expected response to be a valid request","schema":{"title":"L2Point","type":"object","properties":{"dominion":{"type":"string","title":"Dominion","description":"One of: l1, l2, spawn"},"networking":{"title":"Networking","type":"object","required":["keys","rift","sponsor"],"properties":{"keys":{"title":"Keys","type":"object","required":["life","suite","auth","crypto"],"properties":{"life":{"type":"number","title":"Life"},"suite":{"type":"number","title":"Suite"},"auth":{"type":"string","title":"Auth"},"crypto":{"type":"string","title":"Crypto"}}},"rift":{"type":"number","title":"Rift"},"sponsor":{"title":"Sponsor","type":"object","properties":{"has":{"type":"boolean","title":"Forced"},"who":{"type":"string","title":"string_doaGddGA"}}},"escape":{"title":"Ship","description":"An Azimuth Ship","anyOf":[{"type":"string","title":"Patp","default":"~wanzod","description":"patp-encoded string with leading ~"},{"type":"number","title":"Number","description":"number representing a patp"}]}}},"ownership":{"title":"Ownership","type":"object","properties":{"owner":{"type":"object","title":"Address","properties":{"address":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"},"nonce":{"type":"number","title":"Nonce"}}},"spawnProxy":{"type":"object","title":"Address","properties":{"address":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"},"nonce":{"type":"number","title":"Nonce"}}},"managementProxy":{"type":"object","title":"Address","properties":{"address":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"},"nonce":{"type":"number","title":"Nonce"}}},"votingProxy":{"type":"object","title":"Address","properties":{"address":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"},"nonce":{"type":"number","title":"Nonce"}}},"transferProxy":{"type":"object","title":"Address","properties":{"address":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"},"nonce":{"type":"number","title":"Nonce"}}}}}}}},"examples":[{"name":"getPoint-example","params":[{"name":"ship","value":"~norsyr-torryn"}],"description":"Retrieve Azimuth Point information from the rollup for ~norsyr-torryn. \nExample: \n`curl -X POST --data '{\"jsonrpc\": \"2.0\",\"method\": \"getPoint\",\"params\": {\"ship\": \"~norsyr-torryn\"},\"id\": 1}' http://localhost:8080/v1-azimuth`","result":{"name":"getPoint-result-example","value":{"dominion":"l2","ownership":{"transferProxy":{"address":"0x00000000000000000000","nonce":0},"votingProxy":{"address":"0x00000000000000000000","nonce":0},"spawnProxy":{"address":"0x00000000000000000000","nonce":0},"managementProxy":{"address":"0x00000000000000000000","nonce":0},"owner":{"address":"0x6deffb0cafdb11d175f123f6891aa64f01c24f7d","nonce":0}},"network":{"keys":{"life":0,"suite":0,"auth":0,"crypt":0},"sponsor":{"has":true,"who":"marzod"},"rift":0}}}}]},{"name":"getShips","summary":"Returns all the ships controlled by an ethereum address","paramStructure":"by-name","params":[{"name":"address","summary":"Ethereum address (e.g. 0xf48062ae8bafd6ef19cd6cb89db93a0d0ca6ce26","schema":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"}}],"result":{"name":"points","schema":{"type":"array","title":"Ships","items":{"title":"Ship","description":"An Azimuth Ship","anyOf":[{"type":"string","title":"Patp","default":"~wanzod","description":"patp-encoded string with leading ~"},{"type":"number","title":"Number","description":"number representing a patp"}]}}},"examples":[{"name":"List of points","params":[{"name":"address","value":"0xf48062ae8bafd6ef19cd6cb89db93a0d0ca6ce26"}],"description":"Retrieve all points controlled by 0xf48062ae8bafd6ef19cd6cb89db93a0d0ca6ce26`","result":{"name":"points","value":[["zod","wicdev-wisryt","panret-tocsel","marzod","norsyr-torryn","wanzod","binzod"]]}}]},{"name":"transferPoint","summary":"Transfers a point to an ethereum address","tags":[{"name":"transaction"}],"paramStructure":"by-name","params":[{"name":"sig","schema":{"type":"string","title":"Signature","description":"Hex-encoded signature"}},{"name":"from","schema":{"title":"From","type":"object","description":"Ship that sends the transaction and type of Ethereum address that controls it","required":["ship","proxy"],"properties":{"ship":{"title":"Ship","description":"An Azimuth Ship","anyOf":[{"type":"string","title":"Patp","default":"~wanzod","description":"patp-encoded string with leading ~"},{"type":"number","title":"Number","description":"number representing a patp"}]},"proxy":{"title":"Proxy","anyOf":[{"pattern":"/^own$/","type":"string","title":"OwnershipAddress"},{"pattern":"/^spawn$/","type":"string","title":"SpawnProxy"},{"pattern":"/^vote$/","type":"string","title":"VotingProxy"},{"pattern":"/^manage$/","type":"string","title":"ManagementProxy"},{"pattern":"/^transfer$/","type":"string","title":"TransferProxy"}]}}}},{"name":"address","schema":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"}},{"name":"data","schema":{"title":"TransferPointParams","type":"object","required":["address"],"properties":{"address":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"},"reset":{"type":"boolean","title":"Reset"}}}}],"result":{"name":"txHash","description":"Hash of the raw transaction","schema":{"title":"Hash","type":"string","description":"Keccak-256 (not the standardized SHA3-256) of the given data."}}},{"name":"spawn","summary":"Spawns a ship to an Ethereum Address","tags":[{"name":"transaction"}],"paramStructure":"by-name","params":[{"name":"sig","schema":{"type":"string","title":"Signature","description":"Hex-encoded signature"}},{"name":"from","schema":{"title":"From","type":"object","description":"Ship that sends the transaction and type of Ethereum address that controls it","required":["ship","proxy"],"properties":{"ship":{"title":"Ship","description":"An Azimuth Ship","anyOf":[{"type":"string","title":"Patp","default":"~wanzod","description":"patp-encoded string with leading ~"},{"type":"number","title":"Number","description":"number representing a patp"}]},"proxy":{"title":"Proxy","anyOf":[{"pattern":"/^own$/","type":"string","title":"OwnershipAddress"},{"pattern":"/^spawn$/","type":"string","title":"SpawnProxy"},{"pattern":"/^vote$/","type":"string","title":"VotingProxy"},{"pattern":"/^manage$/","type":"string","title":"ManagementProxy"},{"pattern":"/^transfer$/","type":"string","title":"TransferProxy"}]}}}},{"name":"address","schema":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"}},{"name":"data","schema":{"title":"SpawnParams","type":"object","required":["address","ship"],"properties":{"address":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"},"ship":{"title":"Ship","description":"An Azimuth Ship","anyOf":[{"type":"string","title":"Patp","default":"~wanzod","description":"patp-encoded string with leading ~"},{"type":"number","title":"Number","description":"number representing a patp"}]}}}}],"result":{"name":"txHash","description":"Hash of the raw transaction","schema":{"title":"Hash","type":"string","description":"Keccak-256 (not the standardized SHA3-256) of the given data."}}},{"name":"configureKeys","summary":"Configure Keys","tags":[{"name":"transaction"}],"paramStructure":"by-name","params":[{"name":"sig","schema":{"type":"string","title":"Signature","description":"Hex-encoded signature"}},{"name":"from","schema":{"title":"From","type":"object","description":"Ship that sends the transaction and type of Ethereum address that controls it","required":["ship","proxy"],"properties":{"ship":{"title":"Ship","description":"An Azimuth Ship","anyOf":[{"type":"string","title":"Patp","default":"~wanzod","description":"patp-encoded string with leading ~"},{"type":"number","title":"Number","description":"number representing a patp"}]},"proxy":{"title":"Proxy","anyOf":[{"pattern":"/^own$/","type":"string","title":"OwnershipAddress"},{"pattern":"/^spawn$/","type":"string","title":"SpawnProxy"},{"pattern":"/^vote$/","type":"string","title":"VotingProxy"},{"pattern":"/^manage$/","type":"string","title":"ManagementProxy"},{"pattern":"/^transfer$/","type":"string","title":"TransferProxy"}]}}}},{"name":"address","schema":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"}},{"name":"data","schema":{"title":"ConfigureKeysParams","type":"object","required":["encrypt","auth","cryptoSuite","breach"],"properties":{"encrypt":{"type":"string","title":"string_doaGddGA"},"auth":{"type":"string","title":"string_doaGddGA"},"cryptoSuite":{"type":"number","title":"number_Ho1clIqD"},"breach":{"type":"boolean","title":"Breach"}}}}],"result":{"name":"txHash","description":"Hash of the raw transaction","schema":{"title":"Hash","type":"string","description":"Keccak-256 (not the standardized SHA3-256) of the given data."}}},{"name":"escape","summary":"Request escaping to a different sponsor","tags":[{"name":"transaction"}],"paramStructure":"by-name","params":[{"name":"sig","schema":{"type":"string","title":"Signature","description":"Hex-encoded signature"}},{"name":"from","schema":{"title":"From","type":"object","description":"Ship that sends the transaction and type of Ethereum address that controls it","required":["ship","proxy"],"properties":{"ship":{"title":"Ship","description":"An Azimuth Ship","anyOf":[{"type":"string","title":"Patp","default":"~wanzod","description":"patp-encoded string with leading ~"},{"type":"number","title":"Number","description":"number representing a patp"}]},"proxy":{"title":"Proxy","anyOf":[{"pattern":"/^own$/","type":"string","title":"OwnershipAddress"},{"pattern":"/^spawn$/","type":"string","title":"SpawnProxy"},{"pattern":"/^vote$/","type":"string","title":"VotingProxy"},{"pattern":"/^manage$/","type":"string","title":"ManagementProxy"},{"pattern":"/^transfer$/","type":"string","title":"TransferProxy"}]}}}},{"name":"address","schema":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"}},{"name":"data","schema":{"title":"SponsorshipParams","type":"object","required":["ship"],"properties":{"ship":{"title":"Ship","description":"An Azimuth Ship","anyOf":[{"type":"string","title":"Patp","default":"~wanzod","description":"patp-encoded string with leading ~"},{"type":"number","title":"Number","description":"number representing a patp"}]}}}}],"result":{"name":"txHash","description":"Hash of the raw transaction","schema":{"title":"Hash","type":"string","description":"Keccak-256 (not the standardized SHA3-256) of the given data."}}},{"name":"cancelEscape","summary":"Cancel request to escape","tags":[{"name":"transaction"}],"paramStructure":"by-name","params":[{"name":"sig","schema":{"type":"string","title":"Signature","description":"Hex-encoded signature"}},{"name":"from","schema":{"title":"From","type":"object","description":"Ship that sends the transaction and type of Ethereum address that controls it","required":["ship","proxy"],"properties":{"ship":{"title":"Ship","description":"An Azimuth Ship","anyOf":[{"type":"string","title":"Patp","default":"~wanzod","description":"patp-encoded string with leading ~"},{"type":"number","title":"Number","description":"number representing a patp"}]},"proxy":{"title":"Proxy","anyOf":[{"pattern":"/^own$/","type":"string","title":"OwnershipAddress"},{"pattern":"/^spawn$/","type":"string","title":"SpawnProxy"},{"pattern":"/^vote$/","type":"string","title":"VotingProxy"},{"pattern":"/^manage$/","type":"string","title":"ManagementProxy"},{"pattern":"/^transfer$/","type":"string","title":"TransferProxy"}]}}}},{"name":"address","schema":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"}},{"name":"data","schema":{"title":"SponsorshipParams","type":"object","required":["ship"],"properties":{"ship":{"title":"Ship","description":"An Azimuth Ship","anyOf":[{"type":"string","title":"Patp","default":"~wanzod","description":"patp-encoded string with leading ~"},{"type":"number","title":"Number","description":"number representing a patp"}]}}}}],"result":{"name":"txHash","description":"Hash of the raw transaction","schema":{"title":"Hash","type":"string","description":"Keccak-256 (not the standardized SHA3-256) of the given data."}}},{"name":"adopt","summary":"Adopt ship","tags":[{"name":"transaction"}],"paramStructure":"by-name","params":[{"name":"sig","schema":{"type":"string","title":"Signature","description":"Hex-encoded signature"}},{"name":"from","schema":{"title":"From","type":"object","description":"Ship that sends the transaction and type of Ethereum address that controls it","required":["ship","proxy"],"properties":{"ship":{"title":"Ship","description":"An Azimuth Ship","anyOf":[{"type":"string","title":"Patp","default":"~wanzod","description":"patp-encoded string with leading ~"},{"type":"number","title":"Number","description":"number representing a patp"}]},"proxy":{"title":"Proxy","anyOf":[{"pattern":"/^own$/","type":"string","title":"OwnershipAddress"},{"pattern":"/^spawn$/","type":"string","title":"SpawnProxy"},{"pattern":"/^vote$/","type":"string","title":"VotingProxy"},{"pattern":"/^manage$/","type":"string","title":"ManagementProxy"},{"pattern":"/^transfer$/","type":"string","title":"TransferProxy"}]}}}},{"name":"address","schema":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"}},{"name":"data","schema":{"title":"SponsorshipParams","type":"object","required":["ship"],"properties":{"ship":{"title":"Ship","description":"An Azimuth Ship","anyOf":[{"type":"string","title":"Patp","default":"~wanzod","description":"patp-encoded string with leading ~"},{"type":"number","title":"Number","description":"number representing a patp"}]}}}}],"result":{"name":"txHash","description":"Hash of the raw transaction","schema":{"title":"Hash","type":"string","description":"Keccak-256 (not the standardized SHA3-256) of the given data."}}},{"name":"detach","summary":"Detach ship","tags":[{"name":"transaction"}],"paramStructure":"by-name","params":[{"name":"sig","schema":{"type":"string","title":"Signature","description":"Hex-encoded signature"}},{"name":"from","schema":{"title":"From","type":"object","description":"Ship that sends the transaction and type of Ethereum address that controls it","required":["ship","proxy"],"properties":{"ship":{"title":"Ship","description":"An Azimuth Ship","anyOf":[{"type":"string","title":"Patp","default":"~wanzod","description":"patp-encoded string with leading ~"},{"type":"number","title":"Number","description":"number representing a patp"}]},"proxy":{"title":"Proxy","anyOf":[{"pattern":"/^own$/","type":"string","title":"OwnershipAddress"},{"pattern":"/^spawn$/","type":"string","title":"SpawnProxy"},{"pattern":"/^vote$/","type":"string","title":"VotingProxy"},{"pattern":"/^manage$/","type":"string","title":"ManagementProxy"},{"pattern":"/^transfer$/","type":"string","title":"TransferProxy"}]}}}},{"name":"address","schema":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"}},{"name":"data","schema":{"title":"SponsorshipParams","type":"object","required":["ship"],"properties":{"ship":{"title":"Ship","description":"An Azimuth Ship","anyOf":[{"type":"string","title":"Patp","default":"~wanzod","description":"patp-encoded string with leading ~"},{"type":"number","title":"Number","description":"number representing a patp"}]}}}}],"result":{"name":"txHash","description":"Hash of the raw transaction","schema":{"title":"Hash","type":"string","description":"Keccak-256 (not the standardized SHA3-256) of the given data."}}},{"name":"reject","summary":"Reject ship","tags":[{"name":"transaction"}],"paramStructure":"by-name","params":[{"name":"sig","schema":{"type":"string","title":"Signature","description":"Hex-encoded signature"}},{"name":"from","schema":{"title":"From","type":"object","description":"Ship that sends the transaction and type of Ethereum address that controls it","required":["ship","proxy"],"properties":{"ship":{"title":"Ship","description":"An Azimuth Ship","anyOf":[{"type":"string","title":"Patp","default":"~wanzod","description":"patp-encoded string with leading ~"},{"type":"number","title":"Number","description":"number representing a patp"}]},"proxy":{"title":"Proxy","anyOf":[{"pattern":"/^own$/","type":"string","title":"OwnershipAddress"},{"pattern":"/^spawn$/","type":"string","title":"SpawnProxy"},{"pattern":"/^vote$/","type":"string","title":"VotingProxy"},{"pattern":"/^manage$/","type":"string","title":"ManagementProxy"},{"pattern":"/^transfer$/","type":"string","title":"TransferProxy"}]}}}},{"name":"address","schema":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"}},{"name":"data","schema":{"title":"SponsorshipParams","type":"object","required":["ship"],"properties":{"ship":{"title":"Ship","description":"An Azimuth Ship","anyOf":[{"type":"string","title":"Patp","default":"~wanzod","description":"patp-encoded string with leading ~"},{"type":"number","title":"Number","description":"number representing a patp"}]}}}}],"result":{"name":"txHash","description":"Hash of the raw transaction","schema":{"title":"Hash","type":"string","description":"Keccak-256 (not the standardized SHA3-256) of the given data."}}},{"name":"setManagementProxy","summary":"Set Management Proxy","tags":[{"name":"transaction"}],"paramStructure":"by-name","params":[{"name":"sig","schema":{"type":"string","title":"Signature","description":"Hex-encoded signature"}},{"name":"from","schema":{"title":"From","type":"object","description":"Ship that sends the transaction and type of Ethereum address that controls it","required":["ship","proxy"],"properties":{"ship":{"title":"Ship","description":"An Azimuth Ship","anyOf":[{"type":"string","title":"Patp","default":"~wanzod","description":"patp-encoded string with leading ~"},{"type":"number","title":"Number","description":"number representing a patp"}]},"proxy":{"title":"Proxy","anyOf":[{"pattern":"/^own$/","type":"string","title":"OwnershipAddress"},{"pattern":"/^spawn$/","type":"string","title":"SpawnProxy"},{"pattern":"/^vote$/","type":"string","title":"VotingProxy"},{"pattern":"/^manage$/","type":"string","title":"ManagementProxy"},{"pattern":"/^transfer$/","type":"string","title":"TransferProxy"}]}}}},{"name":"address","schema":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"}},{"name":"data","schema":{"title":"AddressParams","type":"object","required":["address"],"properties":{"address":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"}}}}],"result":{"name":"txHash","description":"Hash of the raw transaction","schema":{"title":"Hash","type":"string","description":"Keccak-256 (not the standardized SHA3-256) of the given data."}}},{"name":"setSpawnProxy","summary":"Set Spawn Proxy","tags":[{"name":"transaction"}],"paramStructure":"by-name","params":[{"name":"sig","schema":{"type":"string","title":"Signature","description":"Hex-encoded signature"}},{"name":"from","schema":{"title":"From","type":"object","description":"Ship that sends the transaction and type of Ethereum address that controls it","required":["ship","proxy"],"properties":{"ship":{"title":"Ship","description":"An Azimuth Ship","anyOf":[{"type":"string","title":"Patp","default":"~wanzod","description":"patp-encoded string with leading ~"},{"type":"number","title":"Number","description":"number representing a patp"}]},"proxy":{"title":"Proxy","anyOf":[{"pattern":"/^own$/","type":"string","title":"OwnershipAddress"},{"pattern":"/^spawn$/","type":"string","title":"SpawnProxy"},{"pattern":"/^vote$/","type":"string","title":"VotingProxy"},{"pattern":"/^manage$/","type":"string","title":"ManagementProxy"},{"pattern":"/^transfer$/","type":"string","title":"TransferProxy"}]}}}},{"name":"address","schema":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"}},{"name":"data","schema":{"title":"AddressParams","type":"object","required":["address"],"properties":{"address":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"}}}}],"result":{"name":"txHash","description":"Hash of the raw transaction","schema":{"title":"Hash","type":"string","description":"Keccak-256 (not the standardized SHA3-256) of the given data."}}},{"name":"setTransferProxy","summary":"Set Transfer Proxy","tags":[{"name":"transaction"}],"paramStructure":"by-name","params":[{"name":"sig","schema":{"type":"string","title":"Signature","description":"Hex-encoded signature"}},{"name":"from","schema":{"title":"From","type":"object","description":"Ship that sends the transaction and type of Ethereum address that controls it","required":["ship","proxy"],"properties":{"ship":{"title":"Ship","description":"An Azimuth Ship","anyOf":[{"type":"string","title":"Patp","default":"~wanzod","description":"patp-encoded string with leading ~"},{"type":"number","title":"Number","description":"number representing a patp"}]},"proxy":{"title":"Proxy","anyOf":[{"pattern":"/^own$/","type":"string","title":"OwnershipAddress"},{"pattern":"/^spawn$/","type":"string","title":"SpawnProxy"},{"pattern":"/^vote$/","type":"string","title":"VotingProxy"},{"pattern":"/^manage$/","type":"string","title":"ManagementProxy"},{"pattern":"/^transfer$/","type":"string","title":"TransferProxy"}]}}}},{"name":"address","schema":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"}},{"name":"data","schema":{"title":"AddressParams","type":"object","required":["address"],"properties":{"address":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"}}}}],"result":{"name":"txHash","description":"Hash of the raw transaction","schema":{"title":"Hash","type":"string","description":"Keccak-256 (not the standardized SHA3-256) of the given data."}}},{"name":"getAllPending","summary":"Gets all pending transactions in the roller","tags":[{"name":"pending"}],"paramStructure":"by-name","params":[],"result":{"name":"pending-transaction","description":"List of pending transactions","schema":{"type":"array","title":"List of pending txs","items":{"title":"PendingTransaction","type":"object","description":"Pending transaction in the Roller, waiting to be submitted to Ethereum","required":["forced","tx","address"],"properties":{"forced":{"type":"boolean","title":"Forced"},"tx":{"title":"L2Transaction","type":"object","description":"Raw L2 transaction as defined in /lib/naive.hoon","required":["sig","tx","from"],"properties":{"sig":{"type":"string","title":"Signature","description":"Hex-encoded signature"},"from":{"title":"From","type":"object","description":"Ship that sends the transaction and type of Ethereum address that controls it","required":["ship","proxy"],"properties":{"ship":{"title":"Ship","description":"An Azimuth Ship","anyOf":[{"type":"string","title":"Patp","default":"~wanzod","description":"patp-encoded string with leading ~"},{"type":"number","title":"Number","description":"number representing a patp"}]},"proxy":{"title":"Proxy","anyOf":[{"pattern":"/^own$/","type":"string","title":"OwnershipAddress"},{"pattern":"/^spawn$/","type":"string","title":"SpawnProxy"},{"pattern":"/^vote$/","type":"string","title":"VotingProxy"},{"pattern":"/^manage$/","type":"string","title":"ManagementProxy"},{"pattern":"/^transfer$/","type":"string","title":"TransferProxy"}]}}},"tx":{"title":"L2-Transaction-Common-Params","anyOf":[{"title":"ConfigureKeysParams","type":"object","required":["encrypt","auth","cryptoSuite","breach"],"properties":{"encrypt":{"type":"string","title":"string_doaGddGA"},"auth":{"type":"string","title":"string_doaGddGA"},"cryptoSuite":{"type":"number","title":"number_Ho1clIqD"},"breach":{"type":"boolean","title":"Breach"}}},{"title":"SpawnParams","type":"object","required":["address","ship"],"properties":{"address":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"},"ship":{"title":"Ship","description":"An Azimuth Ship","anyOf":[{"type":"string","title":"Patp","default":"~wanzod","description":"patp-encoded string with leading ~"},{"type":"number","title":"Number","description":"number representing a patp"}]}}},{"title":"ConfigureKeysParams","type":"object","required":["encrypt","auth","cryptoSuite","breach"],"properties":{"encrypt":{"type":"string","title":"string_doaGddGA"},"auth":{"type":"string","title":"string_doaGddGA"},"cryptoSuite":{"type":"number","title":"number_Ho1clIqD"},"breach":{"type":"boolean","title":"Breach"}}},{"title":"SponsorshipParams","type":"object","required":["ship"],"properties":{"ship":{"title":"Ship","description":"An Azimuth Ship","anyOf":[{"type":"string","title":"Patp","default":"~wanzod","description":"patp-encoded string with leading ~"},{"type":"number","title":"Number","description":"number representing a patp"}]}}},{"title":"AddressParams","type":"object","required":["address"],"properties":{"address":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"}}}]}}},"address":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"}}}}},"examples":[{"name":"get-pending-example","params":[],"description":"","result":{"name":"get-pending-example","value":[{"rawTx":{"tx":{"tx":{"data":{"address":"0xf48062ae8bafd6ef19cd6cb89db93a0d0ca6ce2","ship":"balhul-polsub"},"type":"spawn"},"from":{"ship":"wanzod","proxy":"own"}},"sig":"0x2c50e233a62fe1ae4a0f62c18585a245412fc498f0598aae0e4254a2c268038d18e9c7d35b3bb3b7c441f43bd8a7b960d1271b5ecbeb5f86e9e4e3c2b5d15ace00"},"address":"0x6deffb0cafdb11d175f123f6891aa64f01c24f7d","force":false},{"rawTx":{"tx":{"tx":{"data":{"address":"0xf48062ae8bafd6ef19cd6cb89db93a0d0ca6ce2","ship":"modlep-fosreg"},"type":"spawn"},"from":{"ship":"wanzod","proxy":"own"}},"sig":"0xec4bd500e4cbb24dcc9d929e432306847bcfb5a8c9c927faa69e57972cd560392df57e4e3be1ae180be5f79bfa952200176ca908c7aa8992141da15271631e6300"},"address":"0x6deffb0cafdb11d175f123f6891aa64f01c24f7d","force":false},{"rawTx":{"tx":{"tx":{"data":{"address":"0xf48062ae8bafd6ef19cd6cb89db93a0d0ca6ce2","ship":"holnyd-docfex"},"type":"spawn"},"from":{"ship":"wanzod","proxy":"own"}},"sig":"0x23fbdf91c692ddf2cdab4a0f93d84fe1e1c65a5b94db7c2505e26b815261f35949f331a3e2dfe9375e50404ffecf35818874317113f7ea594fc90d834690ab8d01"},"address":"0x6deffb0cafdb11d175f123f6891aa64f01c24f7d","force":false},{"rawTx":{"tx":{"tx":{"data":{"address":"0xf48062ae8bafd6ef19cd6cb89db93a0d0ca6ce2","ship":"rossec-nordys"},"type":"spawn"},"from":{"ship":"wanzod","proxy":"own"}},"sig":"0x303fd3858367acb6e095769fce66946ccbfda9fad3a6468b6593b23b6da893855d94c557d18e0f3cf09cf00989f806b547afcc062cd76fe2c555b0e677fee10e00"},"address":"0x6deffb0cafdb11d175f123f6891aa64f01c24f7d","force":false},{"rawTx":{"tx":{"tx":{"data":{"address":"0xf48062ae8bafd6ef19cd6cb89db93a0d0ca6ce2","ship":"maldeb-hapben"},"type":"spawn"},"from":{"ship":"wanzod","proxy":"own"}},"sig":"0xb369cba5148dc6118bb6b36946a183359942dfea3e5028a98c64d0a578d25ee22c7cc8552af48dbeb151a9de4f9290272cd174dc1fc4dc726577247d752dc02e01"},"address":"0x6deffb0cafdb11d175f123f6891aa64f01c24f7d","force":false},{"rawTx":{"tx":{"tx":{"data":{"address":"0xf48062ae8bafd6ef19cd6cb89db93a0d0ca6ce2","ship":"rostex-fossyl"},"type":"spawn"},"from":{"ship":"wanzod","proxy":"own"}},"sig":"0x79f215fe0908a45ac11cc1e7b100ad4664e1312f70dfe1412f564a60ad4dc98059717e7307386ad0b79a86cc12801ccc6d067db96e05e2d1471aeeb93c64584300"},"address":"0x6deffb0cafdb11d175f123f6891aa64f01c24f7d","force":false},{"rawTx":{"tx":{"tx":{"data":{"address":"0xf48062ae8bafd6ef19cd6cb89db93a0d0ca6ce2","ship":"dirwex-dosrev"},"type":"spawn"},"from":{"ship":"wanzod","proxy":"own"}},"sig":"0x87e7000764ec25246020c43b681359653dd6ac31ff88e1566e807e0b2a0784e416bedd403bbe789fed8efc59b5bd191896524fd260def064cb2ac249e284e36e00"},"address":"0x6deffb0cafdb11d175f123f6891aa64f01c24f7d","force":false},{"rawTx":{"tx":{"tx":{"data":{"address":"0xf48062ae8bafd6ef19cd6cb89db93a0d0ca6ce2","ship":"hapryx-hopner"},"type":"spawn"},"from":{"ship":"wanzod","proxy":"own"}},"sig":"0xa11b0073b5630cf7725e17b901ce213cc217fdb8e313bc1eae8fefe2ea5283496a7aaa3a8c5497a0e45378823dddae4dd2f39271b15b29ce8e9b6f9df0da37f801"},"address":"0x6deffb0cafdb11d175f123f6891aa64f01c24f7d","force":false},{"rawTx":{"tx":{"tx":{"data":{"address":"0xf48062ae8bafd6ef19cd6cb89db93a0d0ca6ce2","ship":"fodhes-fosmet"},"type":"spawn"},"from":{"ship":"wanzod","proxy":"own"}},"sig":"0xd3bb588020ac3f355d87a005ce04cd2a2903e2a14d539e1c3c2cca768998a35d32d48add815efcd97453a551fffa3c2526c6dce504e6630cbb17a57f575b009200"},"address":"0x6deffb0cafdb11d175f123f6891aa64f01c24f7d","force":false}]}}]},{"name":"getPendingByShip","summary":"Gets all pending transactions in the roller, by ship","tags":[{"name":"pending"}],"paramStructure":"by-name","params":[{"name":"ship","schema":{"title":"Ship","description":"An Azimuth Ship","anyOf":[{"type":"string","title":"Patp","default":"~wanzod","description":"patp-encoded string with leading ~"},{"type":"number","title":"Number","description":"number representing a patp"}]}}],"result":{"name":"pending-transaction","description":"List of pending transactions","schema":{"type":"array","title":"List of pending txs","items":{"title":"PendingTransaction","type":"object","description":"Pending transaction in the Roller, waiting to be submitted to Ethereum","required":["forced","tx","address"],"properties":{"forced":{"type":"boolean","title":"Forced"},"tx":{"title":"L2Transaction","type":"object","description":"Raw L2 transaction as defined in /lib/naive.hoon","required":["sig","tx","from"],"properties":{"sig":{"type":"string","title":"Signature","description":"Hex-encoded signature"},"from":{"title":"From","type":"object","description":"Ship that sends the transaction and type of Ethereum address that controls it","required":["ship","proxy"],"properties":{"ship":{"title":"Ship","description":"An Azimuth Ship","anyOf":[{"type":"string","title":"Patp","default":"~wanzod","description":"patp-encoded string with leading ~"},{"type":"number","title":"Number","description":"number representing a patp"}]},"proxy":{"title":"Proxy","anyOf":[{"pattern":"/^own$/","type":"string","title":"OwnershipAddress"},{"pattern":"/^spawn$/","type":"string","title":"SpawnProxy"},{"pattern":"/^vote$/","type":"string","title":"VotingProxy"},{"pattern":"/^manage$/","type":"string","title":"ManagementProxy"},{"pattern":"/^transfer$/","type":"string","title":"TransferProxy"}]}}},"tx":{"title":"L2-Transaction-Common-Params","anyOf":[{"title":"ConfigureKeysParams","type":"object","required":["encrypt","auth","cryptoSuite","breach"],"properties":{"encrypt":{"type":"string","title":"string_doaGddGA"},"auth":{"type":"string","title":"string_doaGddGA"},"cryptoSuite":{"type":"number","title":"number_Ho1clIqD"},"breach":{"type":"boolean","title":"Breach"}}},{"title":"SpawnParams","type":"object","required":["address","ship"],"properties":{"address":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"},"ship":{"title":"Ship","description":"An Azimuth Ship","anyOf":[{"type":"string","title":"Patp","default":"~wanzod","description":"patp-encoded string with leading ~"},{"type":"number","title":"Number","description":"number representing a patp"}]}}},{"title":"ConfigureKeysParams","type":"object","required":["encrypt","auth","cryptoSuite","breach"],"properties":{"encrypt":{"type":"string","title":"string_doaGddGA"},"auth":{"type":"string","title":"string_doaGddGA"},"cryptoSuite":{"type":"number","title":"number_Ho1clIqD"},"breach":{"type":"boolean","title":"Breach"}}},{"title":"SponsorshipParams","type":"object","required":["ship"],"properties":{"ship":{"title":"Ship","description":"An Azimuth Ship","anyOf":[{"type":"string","title":"Patp","default":"~wanzod","description":"patp-encoded string with leading ~"},{"type":"number","title":"Number","description":"number representing a patp"}]}}},{"title":"AddressParams","type":"object","required":["address"],"properties":{"address":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"}}}]}}},"address":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"}}}}},"examples":[{"name":"get-pending-example","params":[{"name":"ship","value":"~wanzod"}],"description":"","result":{"name":"get-pending-example","value":[{"rawTx":{"tx":{"tx":{"data":{"address":"0xf48062ae8bafd6ef19cd6cb89db93a0d0ca6ce2","ship":"balhul-polsub"},"type":"spawn"},"from":{"ship":"wanzod","proxy":"own"}},"sig":"0x2c50e233a62fe1ae4a0f62c18585a245412fc498f0598aae0e4254a2c268038d18e9c7d35b3bb3b7c441f43bd8a7b960d1271b5ecbeb5f86e9e4e3c2b5d15ace00"},"address":"0x6deffb0cafdb11d175f123f6891aa64f01c24f7d","force":false},{"rawTx":{"tx":{"tx":{"data":{"address":"0xf48062ae8bafd6ef19cd6cb89db93a0d0ca6ce2","ship":"modlep-fosreg"},"type":"spawn"},"from":{"ship":"wanzod","proxy":"own"}},"sig":"0xec4bd500e4cbb24dcc9d929e432306847bcfb5a8c9c927faa69e57972cd560392df57e4e3be1ae180be5f79bfa952200176ca908c7aa8992141da15271631e6300"},"address":"0x6deffb0cafdb11d175f123f6891aa64f01c24f7d","force":false},{"rawTx":{"tx":{"tx":{"data":{"address":"0xf48062ae8bafd6ef19cd6cb89db93a0d0ca6ce2","ship":"holnyd-docfex"},"type":"spawn"},"from":{"ship":"wanzod","proxy":"own"}},"sig":"0x23fbdf91c692ddf2cdab4a0f93d84fe1e1c65a5b94db7c2505e26b815261f35949f331a3e2dfe9375e50404ffecf35818874317113f7ea594fc90d834690ab8d01"},"address":"0x6deffb0cafdb11d175f123f6891aa64f01c24f7d","force":false},{"rawTx":{"tx":{"tx":{"data":{"address":"0xf48062ae8bafd6ef19cd6cb89db93a0d0ca6ce2","ship":"rossec-nordys"},"type":"spawn"},"from":{"ship":"wanzod","proxy":"own"}},"sig":"0x303fd3858367acb6e095769fce66946ccbfda9fad3a6468b6593b23b6da893855d94c557d18e0f3cf09cf00989f806b547afcc062cd76fe2c555b0e677fee10e00"},"address":"0x6deffb0cafdb11d175f123f6891aa64f01c24f7d","force":false},{"rawTx":{"tx":{"tx":{"data":{"address":"0xf48062ae8bafd6ef19cd6cb89db93a0d0ca6ce2","ship":"maldeb-hapben"},"type":"spawn"},"from":{"ship":"wanzod","proxy":"own"}},"sig":"0xb369cba5148dc6118bb6b36946a183359942dfea3e5028a98c64d0a578d25ee22c7cc8552af48dbeb151a9de4f9290272cd174dc1fc4dc726577247d752dc02e01"},"address":"0x6deffb0cafdb11d175f123f6891aa64f01c24f7d","force":false},{"rawTx":{"tx":{"tx":{"data":{"address":"0xf48062ae8bafd6ef19cd6cb89db93a0d0ca6ce2","ship":"rostex-fossyl"},"type":"spawn"},"from":{"ship":"wanzod","proxy":"own"}},"sig":"0x79f215fe0908a45ac11cc1e7b100ad4664e1312f70dfe1412f564a60ad4dc98059717e7307386ad0b79a86cc12801ccc6d067db96e05e2d1471aeeb93c64584300"},"address":"0x6deffb0cafdb11d175f123f6891aa64f01c24f7d","force":false},{"rawTx":{"tx":{"tx":{"data":{"address":"0xf48062ae8bafd6ef19cd6cb89db93a0d0ca6ce2","ship":"dirwex-dosrev"},"type":"spawn"},"from":{"ship":"wanzod","proxy":"own"}},"sig":"0x87e7000764ec25246020c43b681359653dd6ac31ff88e1566e807e0b2a0784e416bedd403bbe789fed8efc59b5bd191896524fd260def064cb2ac249e284e36e00"},"address":"0x6deffb0cafdb11d175f123f6891aa64f01c24f7d","force":false},{"rawTx":{"tx":{"tx":{"data":{"address":"0xf48062ae8bafd6ef19cd6cb89db93a0d0ca6ce2","ship":"hapryx-hopner"},"type":"spawn"},"from":{"ship":"wanzod","proxy":"own"}},"sig":"0xa11b0073b5630cf7725e17b901ce213cc217fdb8e313bc1eae8fefe2ea5283496a7aaa3a8c5497a0e45378823dddae4dd2f39271b15b29ce8e9b6f9df0da37f801"},"address":"0x6deffb0cafdb11d175f123f6891aa64f01c24f7d","force":false},{"rawTx":{"tx":{"tx":{"data":{"address":"0xf48062ae8bafd6ef19cd6cb89db93a0d0ca6ce2","ship":"fodhes-fosmet"},"type":"spawn"},"from":{"ship":"wanzod","proxy":"own"}},"sig":"0xd3bb588020ac3f355d87a005ce04cd2a2903e2a14d539e1c3c2cca768998a35d32d48add815efcd97453a551fffa3c2526c6dce504e6630cbb17a57f575b009200"},"address":"0x6deffb0cafdb11d175f123f6891aa64f01c24f7d","force":false}]}}]},{"name":"getPendingByAddress","summary":"Gets all pending transactions in the roller, by address","tags":[{"name":"pending"}],"paramStructure":"by-name","params":[{"name":"address","schema":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"}}],"result":{"name":"pending-transaction","description":"List of pending transactions","schema":{"type":"array","title":"List of pending txs","items":{"title":"PendingTransaction","type":"object","description":"Pending transaction in the Roller, waiting to be submitted to Ethereum","required":["forced","tx","address"],"properties":{"forced":{"type":"boolean","title":"Forced"},"tx":{"title":"L2Transaction","type":"object","description":"Raw L2 transaction as defined in /lib/naive.hoon","required":["sig","tx","from"],"properties":{"sig":{"type":"string","title":"Signature","description":"Hex-encoded signature"},"from":{"title":"From","type":"object","description":"Ship that sends the transaction and type of Ethereum address that controls it","required":["ship","proxy"],"properties":{"ship":{"title":"Ship","description":"An Azimuth Ship","anyOf":[{"type":"string","title":"Patp","default":"~wanzod","description":"patp-encoded string with leading ~"},{"type":"number","title":"Number","description":"number representing a patp"}]},"proxy":{"title":"Proxy","anyOf":[{"pattern":"/^own$/","type":"string","title":"OwnershipAddress"},{"pattern":"/^spawn$/","type":"string","title":"SpawnProxy"},{"pattern":"/^vote$/","type":"string","title":"VotingProxy"},{"pattern":"/^manage$/","type":"string","title":"ManagementProxy"},{"pattern":"/^transfer$/","type":"string","title":"TransferProxy"}]}}},"tx":{"title":"L2-Transaction-Common-Params","anyOf":[{"title":"ConfigureKeysParams","type":"object","required":["encrypt","auth","cryptoSuite","breach"],"properties":{"encrypt":{"type":"string","title":"string_doaGddGA"},"auth":{"type":"string","title":"string_doaGddGA"},"cryptoSuite":{"type":"number","title":"number_Ho1clIqD"},"breach":{"type":"boolean","title":"Breach"}}},{"title":"SpawnParams","type":"object","required":["address","ship"],"properties":{"address":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"},"ship":{"title":"Ship","description":"An Azimuth Ship","anyOf":[{"type":"string","title":"Patp","default":"~wanzod","description":"patp-encoded string with leading ~"},{"type":"number","title":"Number","description":"number representing a patp"}]}}},{"title":"ConfigureKeysParams","type":"object","required":["encrypt","auth","cryptoSuite","breach"],"properties":{"encrypt":{"type":"string","title":"string_doaGddGA"},"auth":{"type":"string","title":"string_doaGddGA"},"cryptoSuite":{"type":"number","title":"number_Ho1clIqD"},"breach":{"type":"boolean","title":"Breach"}}},{"title":"SponsorshipParams","type":"object","required":["ship"],"properties":{"ship":{"title":"Ship","description":"An Azimuth Ship","anyOf":[{"type":"string","title":"Patp","default":"~wanzod","description":"patp-encoded string with leading ~"},{"type":"number","title":"Number","description":"number representing a patp"}]}}},{"title":"AddressParams","type":"object","required":["address"],"properties":{"address":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"}}}]}}},"address":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"}}}}},"examples":[{"name":"get-pending-example","params":[{"name":"address","value":"0x6deffb0cafdb11d175f123f6891aa64f01c24f7d"}],"description":"","result":{"name":"get-pending-example","value":[{"rawTx":{"tx":{"tx":{"data":{"address":"0xf48062ae8bafd6ef19cd6cb89db93a0d0ca6ce2","ship":"balhul-polsub"},"type":"spawn"},"from":{"ship":"wanzod","proxy":"own"}},"sig":"0x2c50e233a62fe1ae4a0f62c18585a245412fc498f0598aae0e4254a2c268038d18e9c7d35b3bb3b7c441f43bd8a7b960d1271b5ecbeb5f86e9e4e3c2b5d15ace00"},"address":"0x6deffb0cafdb11d175f123f6891aa64f01c24f7d","force":false},{"rawTx":{"tx":{"tx":{"data":{"address":"0xf48062ae8bafd6ef19cd6cb89db93a0d0ca6ce2","ship":"modlep-fosreg"},"type":"spawn"},"from":{"ship":"wanzod","proxy":"own"}},"sig":"0xec4bd500e4cbb24dcc9d929e432306847bcfb5a8c9c927faa69e57972cd560392df57e4e3be1ae180be5f79bfa952200176ca908c7aa8992141da15271631e6300"},"address":"0x6deffb0cafdb11d175f123f6891aa64f01c24f7d","force":false},{"rawTx":{"tx":{"tx":{"data":{"address":"0xf48062ae8bafd6ef19cd6cb89db93a0d0ca6ce2","ship":"holnyd-docfex"},"type":"spawn"},"from":{"ship":"wanzod","proxy":"own"}},"sig":"0x23fbdf91c692ddf2cdab4a0f93d84fe1e1c65a5b94db7c2505e26b815261f35949f331a3e2dfe9375e50404ffecf35818874317113f7ea594fc90d834690ab8d01"},"address":"0x6deffb0cafdb11d175f123f6891aa64f01c24f7d","force":false},{"rawTx":{"tx":{"tx":{"data":{"address":"0xf48062ae8bafd6ef19cd6cb89db93a0d0ca6ce2","ship":"rossec-nordys"},"type":"spawn"},"from":{"ship":"wanzod","proxy":"own"}},"sig":"0x303fd3858367acb6e095769fce66946ccbfda9fad3a6468b6593b23b6da893855d94c557d18e0f3cf09cf00989f806b547afcc062cd76fe2c555b0e677fee10e00"},"address":"0x6deffb0cafdb11d175f123f6891aa64f01c24f7d","force":false},{"rawTx":{"tx":{"tx":{"data":{"address":"0xf48062ae8bafd6ef19cd6cb89db93a0d0ca6ce2","ship":"maldeb-hapben"},"type":"spawn"},"from":{"ship":"wanzod","proxy":"own"}},"sig":"0xb369cba5148dc6118bb6b36946a183359942dfea3e5028a98c64d0a578d25ee22c7cc8552af48dbeb151a9de4f9290272cd174dc1fc4dc726577247d752dc02e01"},"address":"0x6deffb0cafdb11d175f123f6891aa64f01c24f7d","force":false},{"rawTx":{"tx":{"tx":{"data":{"address":"0xf48062ae8bafd6ef19cd6cb89db93a0d0ca6ce2","ship":"rostex-fossyl"},"type":"spawn"},"from":{"ship":"wanzod","proxy":"own"}},"sig":"0x79f215fe0908a45ac11cc1e7b100ad4664e1312f70dfe1412f564a60ad4dc98059717e7307386ad0b79a86cc12801ccc6d067db96e05e2d1471aeeb93c64584300"},"address":"0x6deffb0cafdb11d175f123f6891aa64f01c24f7d","force":false},{"rawTx":{"tx":{"tx":{"data":{"address":"0xf48062ae8bafd6ef19cd6cb89db93a0d0ca6ce2","ship":"dirwex-dosrev"},"type":"spawn"},"from":{"ship":"wanzod","proxy":"own"}},"sig":"0x87e7000764ec25246020c43b681359653dd6ac31ff88e1566e807e0b2a0784e416bedd403bbe789fed8efc59b5bd191896524fd260def064cb2ac249e284e36e00"},"address":"0x6deffb0cafdb11d175f123f6891aa64f01c24f7d","force":false},{"rawTx":{"tx":{"tx":{"data":{"address":"0xf48062ae8bafd6ef19cd6cb89db93a0d0ca6ce2","ship":"hapryx-hopner"},"type":"spawn"},"from":{"ship":"wanzod","proxy":"own"}},"sig":"0xa11b0073b5630cf7725e17b901ce213cc217fdb8e313bc1eae8fefe2ea5283496a7aaa3a8c5497a0e45378823dddae4dd2f39271b15b29ce8e9b6f9df0da37f801"},"address":"0x6deffb0cafdb11d175f123f6891aa64f01c24f7d","force":false},{"rawTx":{"tx":{"tx":{"data":{"address":"0xf48062ae8bafd6ef19cd6cb89db93a0d0ca6ce2","ship":"fodhes-fosmet"},"type":"spawn"},"from":{"ship":"wanzod","proxy":"own"}},"sig":"0xd3bb588020ac3f355d87a005ce04cd2a2903e2a14d539e1c3c2cca768998a35d32d48add815efcd97453a551fffa3c2526c6dce504e6630cbb17a57f575b009200"},"address":"0x6deffb0cafdb11d175f123f6891aa64f01c24f7d","force":false}]}}]},{"name":"getSpawned","summary":"Gets all spawned points by a star or galaxy","paramStructure":"by-name","params":[{"name":"ship","schema":{"title":"Ship","description":"An Azimuth Ship","anyOf":[{"type":"string","title":"Patp","default":"~wanzod","description":"patp-encoded string with leading ~"},{"type":"number","title":"Number","description":"number representing a patp"}]}}],"examples":[{"name":"getSpawned-example","params":[{"name":"ship","value":"~wanzod"}],"result":{"name":"spawned","value":[{"address":"0x6deffb0cafdb11d175f123f6891aa64f01c24f7d","ship":"balhul-polsub"},{"address":"0x6deffb0cafdb11d175f123f6891aa64f01c24f7d","ship":"modlep-fosreg"},{"address":"0x6deffb0cafdb11d175f123f6891aa64f01c24f7d","ship":"rossec-nordys"},{"address":"0x6deffb0cafdb11d175f123f6891aa64f01c24f7d","ship":"holnyd-docfex"},{"address":"0x6deffb0cafdb11d175f123f6891aa64f01c24f7d","ship":"rostex-fossyl"},{"address":"0x6deffb0cafdb11d175f123f6891aa64f01c24f7d","ship":"maldeb-hapben"},{"address":"0x6deffb0cafdb11d175f123f6891aa64f01c24f7d","ship":"dirwex-dosrev"},{"address":"0x6deffb0cafdb11d175f123f6891aa64f01c24f7d","ship":"hapryx-hopner"},{"address":"0x6deffb0cafdb11d175f123f6891aa64f01c24f7d","ship":"sibper-mosbyl"},{"address":"0x6deffb0cafdb11d175f123f6891aa64f01c24f7d","ship":"fodhes-fosmet"},{"address":"0x6deffb0cafdb11d175f123f6891aa64f01c24f7d","ship":"namhet-lasdus"},{"address":"0x6deffb0cafdb11d175f123f6891aa64f01c24f7d","ship":"navtyl-hanset"},{"address":"0x6deffb0cafdb11d175f123f6891aa64f01c24f7d","ship":"labred-dibput"},{"address":"0x6deffb0cafdb11d175f123f6891aa64f01c24f7d","ship":"sornyx-fonnyr"},{"address":"0x6deffb0cafdb11d175f123f6891aa64f01c24f7d","ship":"havped-padhus"},{"address":"0x6deffb0cafdb11d175f123f6891aa64f01c24f7d","ship":"tactux-fabweb"},{"address":"0x6deffb0cafdb11d175f123f6891aa64f01c24f7d","ship":"lassut-tachep"},{"address":"0x6deffb0cafdb11d175f123f6891aa64f01c24f7d","ship":"lavlyn-nomsup"},{"address":"0x6deffb0cafdb11d175f123f6891aa64f01c24f7d","ship":"satbes-dostun"},{"address":"0x6deffb0cafdb11d175f123f6891aa64f01c24f7d","ship":"pilwyn-nortux"},{"address":"0x6deffb0cafdb11d175f123f6891aa64f01c24f7d","ship":"fothul-bitsur"},{"address":"0x6deffb0cafdb11d175f123f6891aa64f01c24f7d","ship":"fildef-noswer"}]}}],"result":{"name":"spawned points","description":"List of spawned points and the ownership ethereum address","schema":{"type":"array","title":"SpawnedPoints","items":{"type":"object","title":"SpawnedPoint","properties":{"address":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"},"ship":{"type":"string","title":"ShipName","description":"Ship encoded as a patp without leading sig"}}}}}},{"name":"whenNextBatch","summary":"Timestamp of when the next L2 batch will be submitted","paramStructure":"by-name","params":[],"examples":[{"name":"next-batch-example","params":[],"result":{"name":"batch","value":1623672000000}}],"result":{"name":"Next batch","schema":{"title":"NextBatch","type":"number","description":"Timestamp of when the next roll of L2 txs will be sent out"}}},{"name":"getTransactionStatus","summary":"Status of an L2 transaction submitted to the Roller","paramStructure":"by-name","params":[{"name":"hash","schema":{"title":"hash32","type":"string","pattern":"^0x[0-9a-f]{64}$"}}],"examples":[{"name":"status-example","params":[{"name":"hash","value":"0x4a74c4e92a3cd72cf7dcb68a56fa06ea883c530861497b11b0e03a536cfd2b0b"}],"result":{"name":"status","value":"confirmed"}}],"result":{"name":"Status","schema":{"title":"TransactionStatus","type":"string","description":"One of: confirmed, pending, sending, confirmed, failed, unknown"}}},{"name":"getHistory","summary":"Returns status, hash and type of all L2 tx submitted by an ethereum address,","paramStructure":"by-name","params":[{"name":"address","schema":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"}}],"examples":[{"name":"history-example","params":[{"name":"address","value":"0x6deffb0cafdb11d175f123f6891aa64f01c24f7d"}],"result":{"name":"history","value":[{"status":"pending","ship":"~sampel-palnet","type":"spawn","hash":"0x99bb2265705db3228a07c8b76603de923fcb69662fe2844dc6eb083d1feb34ee"},{"status":"confirmed","ship":"~sampel-palnet","type":"spawn","hash":"0x5c4a29668d21674ab9909a5cdd1de718b055764640b67a5181a003956992c076"},{"status":"confirmed","ship":"~sampel-palnet","type":"spawn","hash":"0x4e15ff81cf9d0cb7c936ee1a43827764ba0864cfa0682e168888da18589bd7bd"},{"status":"confirmed","ship":"~sampel-palnet","type":"spawn","hash":"0xf93f2e2ff1be2be4c89cd5460cab710cc698f61038e46982d37894bfb4152b52"},{"status":"confirmed","ship":"~sampel-palnet","type":"spawn","hash":"0xd3d650daf12b376abd4f1c6e09e3e5028a2a04116d94c8a24ac4fca38e3d49db"},{"status":"confirmed","type":"spawn","hash":"0x311560d19e9ba6b9e1f0d12b4f321a13595d339eee19a7fb5079d3521e2fcd42"},{"status":"confirmed","ship":"~sampel-palnet","type":"spawn","hash":"0xcf9f0596d143a7b47ce545f5dacf932fa356a7d017603c6bddb502be35a72e27"},{"status":"pending","ship":"~sampel-palnet","type":"spawn","hash":"0x4a74c4e92a3cd72cf7dcb68a56fa06ea883c530861497b11b0e03a536cfd2b0b"},{"status":"confirmed","ship":"~sampel-palnet","type":"spawn","hash":"0x15586ba773fbc858e15fa29af42b093a1006009924b41c504b1aca8f9adc7534"},{"status":"confirmed","ship":"~sampel-palnet","type":"spawn","hash":"0xdca5272fcf78c19905c0f69f23ef64a7ee123552c68ec73fc84c180c5aa8d6f9"},{"status":"confirmed","ship":"~sampel-palnet","type":"spawn","hash":"0xe5919e730682356484f2a20913e0e06cb8f6e53a250b329186d7df764d2f9c11"},{"status":"confirmed","ship":"~sampel-palnet","type":"spawn","hash":"0xfd9055547985e174539a3c83fb429b051cc95fdc0ce7f8c3b1ccd87bc4661e8d"},{"status":"confirmed","ship":"~sampel-palnet","type":"spawn","hash":"0xda681585f2a342a49f1f459330b813d7e59baebf60425a8f17c37c7769570459"},{"status":"confirmed","ship":"~sampel-palnet","type":"spawn","hash":"0x9b01e5fe2a366bec8de56806ad8e41306bcefd849775ecdecd4b0b8d5032a34e"},{"status":"confirmed","type":"spawn","hash":"0xab0e73a07015adbd667f5b7498267854d5fc03cfb05cf7180429f90dae88fc0"},{"status":"confirmed","ship":"~sampel-palnet","type":"spawn","hash":"0xf7f7fd97b5618fbb66ddc170917c2734d59c3aa339591fcfbdb414e0d337dd7f"},{"status":"confirmed","ship":"~sampel-palnet","type":"spawn","hash":"0xdffcb5dcf7dd19d8d57a71ff2c342e09d773ef4cf886d4fd6b3c0e2a745d7394"},{"status":"pending","ship":"~sampel-palnet","type":"spawn","hash":"0x2e989af50ed43d936b5339d2d9a11d72b58644c6da348d97ecb7ff05dc67702c"},{"status":"confirmed","ship":"~sampel-palnet","type":"spawn","hash":"0x36a8432358c0c960d2850d048f57e0ceaf98860958ac67d4420a8d8dd1d940cf"},{"status":"confirmed","ship":"~sampel-palnet","type":"spawn","hash":"0x50e6745917033c473aeda58f59c20956f57e835841e5abc1987dad60f4321133"},{"status":"confirmed","ship":"~sampel-palnet","type":"spawn","hash":"0x54da669d6a377cad15006b2b5467386675d825119272f27ea384d8d9c029dfd6"},{"status":"confirmed","ship":"~sampel-palnet","type":"spawn","hash":"0xb84a941b60ce0b2fa5620d0614c52c4debada451452e22b781d571550781572e"},{"status":"pending","ship":"~sampel-palnet","type":"spawn","hash":"0xcf9f0596d143a7b47ce545f5dacf932fa356a7d017603c6bddb502be35a72e27"},{"status":"confirmed","ship":"~sampel-palnet","type":"spawn","hash":"0xcdee99e5dc235a7af2f1d4176a3dea8821ad959719d561f4c570b2bf1f2e1dd3"},{"status":"confirmed","ship":"~sampel-palnet","type":"spawn","hash":"0xd04c2b4008e4abea15f047487904241d348493643a64ef0bb01d3cba4f3550ad"},{"status":"confirmed","ship":"~sampel-palnet","type":"spawn","hash":"0x8dad6e8aa1ef58efb99c4a01210e79d16e4f46eb2bb602d4c8f15ab3b8957e64"}]}}],"result":{"name":"L2 Transactions","schema":{"type":"array","title":"AddressHistory","items":{"type":"object","title":"TransactionHistoryData","properties":{"ship":{"title":"Ship","description":"An Azimuth Ship","anyOf":[{"type":"string","title":"Patp","default":"~wanzod","description":"patp-encoded string with leading ~"},{"type":"number","title":"Number","description":"number representing a patp"}]},"status":{"title":"TransactionStatus","type":"string","description":"One of: confirmed, pending, sending, confirmed, failed, unknown"},"type":{"type":"string","title":"TransactionType","description":"One of transfer-point, spawn, configure-keys, escape, cancel-escape, adopt, reject, detach, set-management-proxy, set-spawn-proxy, set-transfer-proxy"},"hash":{"title":"hash32","type":"string","pattern":"^0x[0-9a-f]{64}$"}}}}}},{"name":"getNonce","summary":"Current nonce used by the Roller","paramStructure":"by-name","params":[],"examples":[{"name":"nonce-example","params":[],"result":{"name":"nonce","value":18}}],"result":{"name":"Nonce","schema":{"type":"number","title":"Nonce"}}},{"name":"cancelTransaction","summary":"Cancels a transaction that hasn't been sent out","paramStructure":"by-name","params":[{"name":"sig","schema":{"type":"string","title":"Signature","description":"Hex-encoded signature"}},{"name":"hash","schema":{"title":"hash32","type":"string","pattern":"^0x[0-9a-f]{64}$"}},{"name":"type","schema":{"type":"string","title":"TransactionType","description":"One of transfer-point, spawn, configure-keys, escape, cancel-escape, adopt, reject, detach, set-management-proxy, set-spawn-proxy, set-transfer-proxy"}},{"name":"ship","schema":{"title":"Ship","description":"An Azimuth Ship","anyOf":[{"type":"string","title":"Patp","default":"~wanzod","description":"patp-encoded string with leading ~"},{"type":"number","title":"Number","description":"number representing a patp"}]}}],"examples":[{"name":"cancel-example","params":[{"name":"sig","value":"0x84b657f38d4d7286ae8cd847bea8cde9f36d8c17373ece99ae266b11200abb4218b4f47c5a122086bb15a66acff95ba28f5c7a7ec28ca6cfc0a6f835d8d5ff7f00"},{"name":"hash","value":"0x2461e96f0d709c42f24646a8de1ea13c67ef8a7276e6fa0c03573947e496656f"},{"name":"type","value":"spawn"},{"name":"ship","value":"~rammel-wisrex"}],"result":{"name":"ok","value":"ok"}}],"result":{"name":"success","description":"Success response","schema":{"title":"Success","type":"string","description":"Always returns \"ok\""}}},{"name":"getRollerConfig","summary":"Returns configuration parameters of the Roller","paramStructure":"by-name","params":[],"examples":[{"name":"config-example","params":[],"result":{"name":"config","value":{"contract":"0x56db68f29203ff44a803faa2404a44ecbb7a7480","refreshTime":300,"nextBatch":1624946400000,"frequency":3600,"chainId":1337}}}],"result":{"name":"Configuration","schema":{"title":"Config","description":"A Roller Config","type":"object","required":["nextBatch","frequency","refreshTime","chainId","contract"],"properties":{"nextBatch":{"title":"NextBatch","type":"number","description":"Timestamp of when the next roll of L2 txs will be sent out"},"frequency":{"type":"number","title":"Frequency","description":"How often the Roller sends out a new batch"},"refreshTime":{"type":"number","title":"RefreshTime","description":"How ofthen the Roller updates its state"},"chainId":{"type":"number","title":"ChainId","description":"For more info: https://chainid.network/"},"contract":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"}}}}},{"name":"getDns","summary":"Naive Rollup DNSs","paramStructure":"by-name","params":[],"examples":[{"name":"DNS","params":[],"result":{"name":"DNS","value":["D","N","S","..."]}}],"result":{"name":"List of Rollup DNS","schema":{"title":"ListOfDNS","description":"A list of DNS","type":"array","items":{"type":"string","title":"DNS"}}}},{"name":"hashTransaction","summary":"Returns an unsigned L2 transaction, ready to be signed","paramStructure":"by-name","params":[{"name":"nonce","schema":{"type":"number","title":"Nonce"}},{"name":"from","schema":{"title":"From","type":"object","description":"Ship that sends the transaction and type of Ethereum address that controls it","required":["ship","proxy"],"properties":{"ship":{"title":"Ship","description":"An Azimuth Ship","anyOf":[{"type":"string","title":"Patp","default":"~wanzod","description":"patp-encoded string with leading ~"},{"type":"number","title":"Number","description":"number representing a patp"}]},"proxy":{"title":"Proxy","anyOf":[{"pattern":"/^own$/","type":"string","title":"OwnershipAddress"},{"pattern":"/^spawn$/","type":"string","title":"SpawnProxy"},{"pattern":"/^vote$/","type":"string","title":"VotingProxy"},{"pattern":"/^manage$/","type":"string","title":"ManagementProxy"},{"pattern":"/^transfer$/","type":"string","title":"TransferProxy"}]}}}},{"name":"tx","schema":{"type":"string","title":"TransactionType","description":"One of transfer-point, spawn, configure-keys, escape, cancel-escape, adopt, reject, detach, set-management-proxy, set-spawn-proxy, set-transfer-proxy"}},{"name":"data","schema":{"title":"L2Data","description":"Data requiered for a L2 Transaction","anyOf":[{"title":"TransferPointParams","type":"object","required":["address"],"properties":{"address":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"},"reset":{"type":"boolean","title":"Reset"}}},{"title":"SpawnParams","type":"object","required":["address","ship"],"properties":{"address":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"},"ship":{"title":"Ship","description":"An Azimuth Ship","anyOf":[{"type":"string","title":"Patp","default":"~wanzod","description":"patp-encoded string with leading ~"},{"type":"number","title":"Number","description":"number representing a patp"}]}}},{"title":"ConfigureKeysParams","type":"object","required":["encrypt","auth","cryptoSuite","breach"],"properties":{"encrypt":{"type":"string","title":"string_doaGddGA"},"auth":{"type":"string","title":"string_doaGddGA"},"cryptoSuite":{"type":"number","title":"number_Ho1clIqD"},"breach":{"type":"boolean","title":"Breach"}}},{"title":"SponsorshipParams","type":"object","required":["ship"],"properties":{"ship":{"title":"Ship","description":"An Azimuth Ship","anyOf":[{"type":"string","title":"Patp","default":"~wanzod","description":"patp-encoded string with leading ~"},{"type":"number","title":"Number","description":"number representing a patp"}]}}},{"title":"AddressParams","type":"object","required":["address"],"properties":{"address":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"}}}]}}],"result":{"name":"Hash","description":"Hash of the L2 transaction","schema":{"title":"Hash","type":"string","description":"Keccak-256 (not the standardized SHA3-256) of the given data."}}},{"name":"getOwnedPoints","summary":"Returns all the ships controlled by an ethereum address as owner proxy","paramStructure":"by-name","params":[{"name":"address","summary":"Ethereum address (e.g. 0xf48062ae8bafd6ef19cd6cb89db93a0d0ca6ce26","schema":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"}}],"result":{"name":"points","schema":{"type":"array","title":"Ships","items":{"title":"Ship","description":"An Azimuth Ship","anyOf":[{"type":"string","title":"Patp","default":"~wanzod","description":"patp-encoded string with leading ~"},{"type":"number","title":"Number","description":"number representing a patp"}]}}}},{"name":"getTransferringFor","summary":"Returns all the ships controlled by an ethereum address as transfer proxy","paramStructure":"by-name","params":[{"name":"address","summary":"Ethereum address (e.g. 0xf48062ae8bafd6ef19cd6cb89db93a0d0ca6ce26","schema":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"}}],"result":{"name":"points","schema":{"type":"array","title":"Ships","items":{"title":"Ship","description":"An Azimuth Ship","anyOf":[{"type":"string","title":"Patp","default":"~wanzod","description":"patp-encoded string with leading ~"},{"type":"number","title":"Number","description":"number representing a patp"}]}}}},{"name":"getManagerFor","summary":"Returns all the ships controlled by an ethereum address as manager proxy","paramStructure":"by-name","params":[{"name":"address","summary":"Ethereum address (e.g. 0xf48062ae8bafd6ef19cd6cb89db93a0d0ca6ce26","schema":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"}}],"result":{"name":"points","schema":{"type":"array","title":"Ships","items":{"title":"Ship","description":"An Azimuth Ship","anyOf":[{"type":"string","title":"Patp","default":"~wanzod","description":"patp-encoded string with leading ~"},{"type":"number","title":"Number","description":"number representing a patp"}]}}}},{"name":"getVotingFor","summary":"Returns all the ships controlled by an ethereum address as voting proxy","paramStructure":"by-name","params":[{"name":"address","summary":"Ethereum address (e.g. 0xf48062ae8bafd6ef19cd6cb89db93a0d0ca6ce26","schema":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"}}],"result":{"name":"points","schema":{"type":"array","title":"Ships","items":{"title":"Ship","description":"An Azimuth Ship","anyOf":[{"type":"string","title":"Patp","default":"~wanzod","description":"patp-encoded string with leading ~"},{"type":"number","title":"Number","description":"number representing a patp"}]}}}},{"name":"getSpawningFor","summary":"Returns all the ships controlled by an ethereum address as spawn proxy","paramStructure":"by-name","params":[{"name":"address","summary":"Ethereum address (e.g. 0xf48062ae8bafd6ef19cd6cb89db93a0d0ca6ce26","schema":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"}}],"result":{"name":"points","schema":{"type":"array","title":"Ships","items":{"title":"Ship","description":"An Azimuth Ship","anyOf":[{"type":"string","title":"Patp","default":"~wanzod","description":"patp-encoded string with leading ~"},{"type":"number","title":"Number","description":"number representing a patp"}]}}}}],"components":{"schemas":{"eth-address":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"},"hash32":{"title":"hash32","type":"string","pattern":"^0x[0-9a-f]{64}$"},"Point":{"title":"L2Point","type":"object","properties":{"dominion":{"type":"string","title":"Dominion","description":"One of: l1, l2, spawn"},"networking":{"title":"Networking","type":"object","required":["keys","rift","sponsor"],"properties":{"keys":{"title":"Keys","type":"object","required":["life","suite","auth","crypto"],"properties":{"life":{"type":"number","title":"Life"},"suite":{"type":"number","title":"Suite"},"auth":{"type":"string","title":"Auth"},"crypto":{"type":"string","title":"Crypto"}}},"rift":{"type":"number","title":"Rift"},"sponsor":{"title":"Sponsor","type":"object","properties":{"has":{"type":"boolean","title":"Forced"},"who":{"type":"string","title":"string_doaGddGA"}}},"escape":{"title":"Ship","description":"An Azimuth Ship","anyOf":[{"type":"string","title":"Patp","default":"~wanzod","description":"patp-encoded string with leading ~"},{"type":"number","title":"Number","description":"number representing a patp"}]}}},"ownership":{"title":"Ownership","type":"object","properties":{"owner":{"type":"object","title":"Address","properties":{"address":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"},"nonce":{"type":"number","title":"Nonce"}}},"spawnProxy":{"type":"object","title":"Address","properties":{"address":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"},"nonce":{"type":"number","title":"Nonce"}}},"managementProxy":{"type":"object","title":"Address","properties":{"address":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"},"nonce":{"type":"number","title":"Nonce"}}},"votingProxy":{"type":"object","title":"Address","properties":{"address":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"},"nonce":{"type":"number","title":"Nonce"}}},"transferProxy":{"type":"object","title":"Address","properties":{"address":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"},"nonce":{"type":"number","title":"Nonce"}}}}}}},"Ownership":{"title":"Ownership","type":"object","properties":{"owner":{"type":"object","title":"Address","properties":{"address":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"},"nonce":{"type":"number","title":"Nonce"}}},"spawnProxy":{"type":"object","title":"Address","properties":{"address":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"},"nonce":{"type":"number","title":"Nonce"}}},"managementProxy":{"type":"object","title":"Address","properties":{"address":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"},"nonce":{"type":"number","title":"Nonce"}}},"votingProxy":{"type":"object","title":"Address","properties":{"address":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"},"nonce":{"type":"number","title":"Nonce"}}},"transferProxy":{"type":"object","title":"Address","properties":{"address":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"},"nonce":{"type":"number","title":"Nonce"}}}}},"Keys":{"title":"Keys","type":"object","required":["life","suite","auth","crypto"],"properties":{"life":{"type":"number","title":"Life"},"suite":{"type":"number","title":"Suite"},"auth":{"type":"string","title":"Auth"},"crypto":{"type":"string","title":"Crypto"}}},"Networking":{"title":"Networking","type":"object","required":["keys","rift","sponsor"],"properties":{"keys":{"title":"Keys","type":"object","required":["life","suite","auth","crypto"],"properties":{"life":{"type":"number","title":"Life"},"suite":{"type":"number","title":"Suite"},"auth":{"type":"string","title":"Auth"},"crypto":{"type":"string","title":"Crypto"}}},"rift":{"type":"number","title":"Rift"},"sponsor":{"title":"Sponsor","type":"object","properties":{"has":{"type":"boolean","title":"Forced"},"who":{"type":"string","title":"string_doaGddGA"}}},"escape":{"title":"Ship","description":"An Azimuth Ship","anyOf":[{"type":"string","title":"Patp","default":"~wanzod","description":"patp-encoded string with leading ~"},{"type":"number","title":"Number","description":"number representing a patp"}]}}},"Sponsor":{"title":"Sponsor","type":"object","properties":{"has":{"type":"boolean","title":"Forced"},"who":{"type":"string","title":"string_doaGddGA"}}},"Nonce":{"type":"number","title":"Nonce"},"Address":{"type":"object","title":"Address","properties":{"address":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"},"nonce":{"type":"number","title":"Nonce"}}},"Dominion":{"type":"string","title":"Dominion","description":"One of: l1, l2, spawn"},"Signature":{"type":"string","title":"Signature","description":"Hex-encoded signature"},"From":{"title":"From","type":"object","description":"Ship that sends the transaction and type of Ethereum address that controls it","required":["ship","proxy"],"properties":{"ship":{"title":"Ship","description":"An Azimuth Ship","anyOf":[{"type":"string","title":"Patp","default":"~wanzod","description":"patp-encoded string with leading ~"},{"type":"number","title":"Number","description":"number representing a patp"}]},"proxy":{"title":"Proxy","anyOf":[{"pattern":"/^own$/","type":"string","title":"OwnershipAddress"},{"pattern":"/^spawn$/","type":"string","title":"SpawnProxy"},{"pattern":"/^vote$/","type":"string","title":"VotingProxy"},{"pattern":"/^manage$/","type":"string","title":"ManagementProxy"},{"pattern":"/^transfer$/","type":"string","title":"TransferProxy"}]}}},"TransferPointParams":{"title":"TransferPointParams","type":"object","required":["address"],"properties":{"address":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"},"reset":{"type":"boolean","title":"Reset"}}},"SpawnParams":{"title":"SpawnParams","type":"object","required":["address","ship"],"properties":{"address":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"},"ship":{"title":"Ship","description":"An Azimuth Ship","anyOf":[{"type":"string","title":"Patp","default":"~wanzod","description":"patp-encoded string with leading ~"},{"type":"number","title":"Number","description":"number representing a patp"}]}}},"ConfigureKeysParams":{"title":"ConfigureKeysParams","type":"object","required":["encrypt","auth","cryptoSuite","breach"],"properties":{"encrypt":{"type":"string","title":"string_doaGddGA"},"auth":{"type":"string","title":"string_doaGddGA"},"cryptoSuite":{"type":"number","title":"number_Ho1clIqD"},"breach":{"type":"boolean","title":"Breach"}}},"SponsorshipParams":{"title":"SponsorshipParams","type":"object","required":["ship"],"properties":{"ship":{"title":"Ship","description":"An Azimuth Ship","anyOf":[{"type":"string","title":"Patp","default":"~wanzod","description":"patp-encoded string with leading ~"},{"type":"number","title":"Number","description":"number representing a patp"}]}}},"AddressParams":{"title":"AddressParams","type":"object","required":["address"],"properties":{"address":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"}}},"TransactionStatus":{"title":"TransactionStatus","type":"string","description":"One of: confirmed, pending, sending, confirmed, failed, unknown"},"TransactionType":{"type":"string","title":"TransactionType","description":"One of transfer-point, spawn, configure-keys, escape, cancel-escape, adopt, reject, detach, set-management-proxy, set-spawn-proxy, set-transfer-proxy"},"L2Transaction":{"title":"L2Transaction","type":"object","description":"Raw L2 transaction as defined in /lib/naive.hoon","required":["sig","tx","from"],"properties":{"sig":{"type":"string","title":"Signature","description":"Hex-encoded signature"},"from":{"title":"From","type":"object","description":"Ship that sends the transaction and type of Ethereum address that controls it","required":["ship","proxy"],"properties":{"ship":{"title":"Ship","description":"An Azimuth Ship","anyOf":[{"type":"string","title":"Patp","default":"~wanzod","description":"patp-encoded string with leading ~"},{"type":"number","title":"Number","description":"number representing a patp"}]},"proxy":{"title":"Proxy","anyOf":[{"pattern":"/^own$/","type":"string","title":"OwnershipAddress"},{"pattern":"/^spawn$/","type":"string","title":"SpawnProxy"},{"pattern":"/^vote$/","type":"string","title":"VotingProxy"},{"pattern":"/^manage$/","type":"string","title":"ManagementProxy"},{"pattern":"/^transfer$/","type":"string","title":"TransferProxy"}]}}},"tx":{"title":"L2-Transaction-Common-Params","anyOf":[{"title":"ConfigureKeysParams","type":"object","required":["encrypt","auth","cryptoSuite","breach"],"properties":{"encrypt":{"type":"string","title":"string_doaGddGA"},"auth":{"type":"string","title":"string_doaGddGA"},"cryptoSuite":{"type":"number","title":"number_Ho1clIqD"},"breach":{"type":"boolean","title":"Breach"}}},{"title":"SpawnParams","type":"object","required":["address","ship"],"properties":{"address":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"},"ship":{"title":"Ship","description":"An Azimuth Ship","anyOf":[{"type":"string","title":"Patp","default":"~wanzod","description":"patp-encoded string with leading ~"},{"type":"number","title":"Number","description":"number representing a patp"}]}}},{"title":"ConfigureKeysParams","type":"object","required":["encrypt","auth","cryptoSuite","breach"],"properties":{"encrypt":{"type":"string","title":"string_doaGddGA"},"auth":{"type":"string","title":"string_doaGddGA"},"cryptoSuite":{"type":"number","title":"number_Ho1clIqD"},"breach":{"type":"boolean","title":"Breach"}}},{"title":"SponsorshipParams","type":"object","required":["ship"],"properties":{"ship":{"title":"Ship","description":"An Azimuth Ship","anyOf":[{"type":"string","title":"Patp","default":"~wanzod","description":"patp-encoded string with leading ~"},{"type":"number","title":"Number","description":"number representing a patp"}]}}},{"title":"AddressParams","type":"object","required":["address"],"properties":{"address":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"}}}]}}},"PendingTransaction":{"title":"PendingTransaction","type":"object","description":"Pending transaction in the Roller, waiting to be submitted to Ethereum","required":["forced","tx","address"],"properties":{"forced":{"type":"boolean","title":"Forced"},"tx":{"title":"L2Transaction","type":"object","description":"Raw L2 transaction as defined in /lib/naive.hoon","required":["sig","tx","from"],"properties":{"sig":{"type":"string","title":"Signature","description":"Hex-encoded signature"},"from":{"title":"From","type":"object","description":"Ship that sends the transaction and type of Ethereum address that controls it","required":["ship","proxy"],"properties":{"ship":{"title":"Ship","description":"An Azimuth Ship","anyOf":[{"type":"string","title":"Patp","default":"~wanzod","description":"patp-encoded string with leading ~"},{"type":"number","title":"Number","description":"number representing a patp"}]},"proxy":{"title":"Proxy","anyOf":[{"pattern":"/^own$/","type":"string","title":"OwnershipAddress"},{"pattern":"/^spawn$/","type":"string","title":"SpawnProxy"},{"pattern":"/^vote$/","type":"string","title":"VotingProxy"},{"pattern":"/^manage$/","type":"string","title":"ManagementProxy"},{"pattern":"/^transfer$/","type":"string","title":"TransferProxy"}]}}},"tx":{"title":"L2-Transaction-Common-Params","anyOf":[{"title":"ConfigureKeysParams","type":"object","required":["encrypt","auth","cryptoSuite","breach"],"properties":{"encrypt":{"type":"string","title":"string_doaGddGA"},"auth":{"type":"string","title":"string_doaGddGA"},"cryptoSuite":{"type":"number","title":"number_Ho1clIqD"},"breach":{"type":"boolean","title":"Breach"}}},{"title":"SpawnParams","type":"object","required":["address","ship"],"properties":{"address":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"},"ship":{"title":"Ship","description":"An Azimuth Ship","anyOf":[{"type":"string","title":"Patp","default":"~wanzod","description":"patp-encoded string with leading ~"},{"type":"number","title":"Number","description":"number representing a patp"}]}}},{"title":"ConfigureKeysParams","type":"object","required":["encrypt","auth","cryptoSuite","breach"],"properties":{"encrypt":{"type":"string","title":"string_doaGddGA"},"auth":{"type":"string","title":"string_doaGddGA"},"cryptoSuite":{"type":"number","title":"number_Ho1clIqD"},"breach":{"type":"boolean","title":"Breach"}}},{"title":"SponsorshipParams","type":"object","required":["ship"],"properties":{"ship":{"title":"Ship","description":"An Azimuth Ship","anyOf":[{"type":"string","title":"Patp","default":"~wanzod","description":"patp-encoded string with leading ~"},{"type":"number","title":"Number","description":"number representing a patp"}]}}},{"title":"AddressParams","type":"object","required":["address"],"properties":{"address":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"}}}]}}},"address":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"}}},"PendingTransactions":{"type":"array","title":"List of pending txs","items":{"title":"PendingTransaction","type":"object","description":"Pending transaction in the Roller, waiting to be submitted to Ethereum","required":["forced","tx","address"],"properties":{"forced":{"type":"boolean","title":"Forced"},"tx":{"title":"L2Transaction","type":"object","description":"Raw L2 transaction as defined in /lib/naive.hoon","required":["sig","tx","from"],"properties":{"sig":{"type":"string","title":"Signature","description":"Hex-encoded signature"},"from":{"title":"From","type":"object","description":"Ship that sends the transaction and type of Ethereum address that controls it","required":["ship","proxy"],"properties":{"ship":{"title":"Ship","description":"An Azimuth Ship","anyOf":[{"type":"string","title":"Patp","default":"~wanzod","description":"patp-encoded string with leading ~"},{"type":"number","title":"Number","description":"number representing a patp"}]},"proxy":{"title":"Proxy","anyOf":[{"pattern":"/^own$/","type":"string","title":"OwnershipAddress"},{"pattern":"/^spawn$/","type":"string","title":"SpawnProxy"},{"pattern":"/^vote$/","type":"string","title":"VotingProxy"},{"pattern":"/^manage$/","type":"string","title":"ManagementProxy"},{"pattern":"/^transfer$/","type":"string","title":"TransferProxy"}]}}},"tx":{"title":"L2-Transaction-Common-Params","anyOf":[{"title":"ConfigureKeysParams","type":"object","required":["encrypt","auth","cryptoSuite","breach"],"properties":{"encrypt":{"type":"string","title":"string_doaGddGA"},"auth":{"type":"string","title":"string_doaGddGA"},"cryptoSuite":{"type":"number","title":"number_Ho1clIqD"},"breach":{"type":"boolean","title":"Breach"}}},{"title":"SpawnParams","type":"object","required":["address","ship"],"properties":{"address":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"},"ship":{"title":"Ship","description":"An Azimuth Ship","anyOf":[{"type":"string","title":"Patp","default":"~wanzod","description":"patp-encoded string with leading ~"},{"type":"number","title":"Number","description":"number representing a patp"}]}}},{"title":"ConfigureKeysParams","type":"object","required":["encrypt","auth","cryptoSuite","breach"],"properties":{"encrypt":{"type":"string","title":"string_doaGddGA"},"auth":{"type":"string","title":"string_doaGddGA"},"cryptoSuite":{"type":"number","title":"number_Ho1clIqD"},"breach":{"type":"boolean","title":"Breach"}}},{"title":"SponsorshipParams","type":"object","required":["ship"],"properties":{"ship":{"title":"Ship","description":"An Azimuth Ship","anyOf":[{"type":"string","title":"Patp","default":"~wanzod","description":"patp-encoded string with leading ~"},{"type":"number","title":"Number","description":"number representing a patp"}]}}},{"title":"AddressParams","type":"object","required":["address"],"properties":{"address":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"}}}]}}},"address":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"}}}},"L2Data":{"title":"L2Data","description":"Data requiered for a L2 Transaction","anyOf":[{"title":"TransferPointParams","type":"object","required":["address"],"properties":{"address":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"},"reset":{"type":"boolean","title":"Reset"}}},{"title":"SpawnParams","type":"object","required":["address","ship"],"properties":{"address":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"},"ship":{"title":"Ship","description":"An Azimuth Ship","anyOf":[{"type":"string","title":"Patp","default":"~wanzod","description":"patp-encoded string with leading ~"},{"type":"number","title":"Number","description":"number representing a patp"}]}}},{"title":"ConfigureKeysParams","type":"object","required":["encrypt","auth","cryptoSuite","breach"],"properties":{"encrypt":{"type":"string","title":"string_doaGddGA"},"auth":{"type":"string","title":"string_doaGddGA"},"cryptoSuite":{"type":"number","title":"number_Ho1clIqD"},"breach":{"type":"boolean","title":"Breach"}}},{"title":"SponsorshipParams","type":"object","required":["ship"],"properties":{"ship":{"title":"Ship","description":"An Azimuth Ship","anyOf":[{"type":"string","title":"Patp","default":"~wanzod","description":"patp-encoded string with leading ~"},{"type":"number","title":"Number","description":"number representing a patp"}]}}},{"title":"AddressParams","type":"object","required":["address"],"properties":{"address":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"}}}]},"Ship":{"title":"Ship","description":"An Azimuth Ship","anyOf":[{"type":"string","title":"Patp","default":"~wanzod","description":"patp-encoded string with leading ~"},{"type":"number","title":"Number","description":"number representing a patp"}]},"NextBatch":{"title":"NextBatch","type":"number","description":"Timestamp of when the next roll of L2 txs will be sent out"},"Config":{"title":"Config","description":"A Roller Config","type":"object","required":["nextBatch","frequency","refreshTime","chainId","contract"],"properties":{"nextBatch":{"title":"NextBatch","type":"number","description":"Timestamp of when the next roll of L2 txs will be sent out"},"frequency":{"type":"number","title":"Frequency","description":"How often the Roller sends out a new batch"},"refreshTime":{"type":"number","title":"RefreshTime","description":"How ofthen the Roller updates its state"},"chainId":{"type":"number","title":"ChainId","description":"For more info: https://chainid.network/"},"contract":{"title":"eth-address","description":"hex encoded address","type":"string","pattern":"^0x[0-9a-f]{40}$"}}},"DNS":{"title":"ListOfDNS","description":"A list of DNS","type":"array","items":{"type":"string","title":"DNS"}},"Success":{"title":"Success","type":"string","description":"Always returns \"ok\""},"Hash":{"title":"Hash","type":"string","description":"Keccak-256 (not the standardized SHA3-256) of the given data."}}}} ;
  public transport: HTTPTransport | WebSocketTransport | PostMessageWindowTransport | PostMessageIframeTransport;
  private validator: MethodCallValidator;
  private timeout: number | undefined;

  constructor(options: Options) {

    if (options.transport === undefined || options.transport.type === undefined) {
      throw new Error("Invalid constructor params");
    }
    const {type, host, port, protocol} = options.transport;
    let path = options.transport.path || "";
    if(path && path[0] !== "/") {
        path = "/" + path;
    }
    switch (type) {
      case 'http':
      case 'https':
        this.transport = new HTTPTransport((protocol || type) + "://" + host + ":" + port + path);
        break;
      case 'websocket':
        this.transport = new WebSocketTransport((protocol || "ws://") + host + ":" + port + path);
        break;
      case 'postmessageiframe':
        this.transport = new PostMessageIframeTransport(protocol + "://" + host + ":" + port + path);
        break;
      case 'postmessagewindow':
        this.transport = new PostMessageWindowTransport(protocol + "://" + host + ":" + port + path);
        break;
      default:
        throw new Error("unsupported transport");
        break;
    }
    this.rpc = new Client(new RequestManager([this.transport]));
    this.validator = new MethodCallValidator(RollerRPCAPI.openrpcDocument);
  }
  /**
   * Adds a JSONRPC notification handler to handle receiving notifications.
   * @example
   * myClient.onNotification((data)=>console.log(data));
   */
  public onNotification(callback: (data: any) => void) {
    this.rpc.onNotification(callback);
  }

  /**
   * Adds an optional JSONRPCError handler to handle receiving errors that cannot be resolved to a specific request
   * @example
   * myClient.onError((err: JSONRPCError)=>console.log(err.message));
   */
  public onError(callback: (data: JSONRPCError) => void) {
     this.rpc.onError(callback);
  }

  /**
   * Sets a default timeout in ms for all requests excluding notifications.
   * @example
   * // 20s timeout
   * myClient.setDefaultTimeout(20000);
   * // Removes timeout from request
   * myClient.setDefaultTimeout(undefined);
   */
   public setDefaultTimeout(ms?: number) {
    this.timeout = ms;
  }

  /**
   * Initiates [[RollerRPCAPI.startBatch]] in order to build a batch call.
   *
   * Subsequent calls to [[RollerRPCAPI.request]] will be added to the batch.
   * Once [[RollerRPCAPI.stopBatch]] is called, the promises for the [[RollerRPCAPI.request]]
   * will then be resolved.  If there is already a batch in progress this method is a noop.
   *
   * @example
   * myClient.startBatch();
   * myClient.foo().then(() => console.log("foobar"))
   * myClient.bar().then(() => console.log("foobarbaz"))
   * myClient.stopBatch();
   */
  public startBatch(): void {
    return this.rpc.startBatch();
  }

  /**
   * Initiates [[Client.stopBatch]] in order to finalize and send the batch to the underlying transport.
   *
   * stopBatch will send the [[RollerRPCAPI]] calls made since the last [[RollerRPCAPI.startBatch]] call. For
   * that reason, [[RollerRPCAPI.startBatch]] MUST be called before [[RollerRPCAPI.stopBatch]].
   *
   * @example
   * myClient.startBatch();
   * myClient.foo().then(() => console.log("foobar"))
   * myClient.bar().then(() => console.log("foobarbaz"))
   * myClient.stopBatch();
   */
  public stopBatch(): void {
    return this.rpc.stopBatch();
  }

  private request(methodName: string, params: any[]): Promise<any> {
    const methodObject = _.find((RollerRPCAPI.openrpcDocument.methods as MethodObject[]), ({name}) => name === methodName) as MethodObject;
    const notification = methodObject.result ? false : true;
    const openRpcMethodValidationErrors = this.validator.validate(methodName, params);
    if ( openRpcMethodValidationErrors instanceof MethodNotFoundError || openRpcMethodValidationErrors.length > 0) {
      return Promise.reject(openRpcMethodValidationErrors);
    }

    let rpcParams;
    if (methodObject.paramStructure && methodObject.paramStructure === "by-name") {
      rpcParams = _.zipObject(_.map(methodObject.params, "name"), params);
    } else {
      rpcParams = params;
    }
    if (notification) {
      return this.rpc.notify({method: methodName, params: rpcParams});
    }
    return this.rpc.request({method: methodName, params: rpcParams}, this.timeout);
  }

  
  /**
   * Retrieves Azimuth Point data for a specific ship
   */
  // tslint:disable-next-line:max-line-length
  public getPoint: GetPoint = (...params) => {
    return this.request("getPoint", params);
  }
  
  /**
   * Returns all the ships controlled by an ethereum address
   */
  // tslint:disable-next-line:max-line-length
  public getShips: GetShips = (...params) => {
    return this.request("getShips", params);
  }
  
  /**
   * Transfers a point to an ethereum address
   */
  // tslint:disable-next-line:max-line-length
  public transferPoint: TransferPoint = (...params) => {
    return this.request("transferPoint", params);
  }
  
  /**
   * Spawns a ship to an Ethereum Address
   */
  // tslint:disable-next-line:max-line-length
  public spawn: Spawn = (...params) => {
    return this.request("spawn", params);
  }
  
  /**
   * Configure Keys
   */
  // tslint:disable-next-line:max-line-length
  public configureKeys: ConfigureKeys = (...params) => {
    return this.request("configureKeys", params);
  }
  
  /**
   * Request escaping to a different sponsor
   */
  // tslint:disable-next-line:max-line-length
  public escape: Escape = (...params) => {
    return this.request("escape", params);
  }
  
  /**
   * Cancel request to escape
   */
  // tslint:disable-next-line:max-line-length
  public cancelEscape: CancelEscape = (...params) => {
    return this.request("cancelEscape", params);
  }
  
  /**
   * Adopt ship
   */
  // tslint:disable-next-line:max-line-length
  public adopt: Adopt = (...params) => {
    return this.request("adopt", params);
  }
  
  /**
   * Detach ship
   */
  // tslint:disable-next-line:max-line-length
  public detach: Detach = (...params) => {
    return this.request("detach", params);
  }
  
  /**
   * Reject ship
   */
  // tslint:disable-next-line:max-line-length
  public reject: Reject = (...params) => {
    return this.request("reject", params);
  }
  
  /**
   * Set Management Proxy
   */
  // tslint:disable-next-line:max-line-length
  public setManagementProxy: SetManagementProxy = (...params) => {
    return this.request("setManagementProxy", params);
  }
  
  /**
   * Set Spawn Proxy
   */
  // tslint:disable-next-line:max-line-length
  public setSpawnProxy: SetSpawnProxy = (...params) => {
    return this.request("setSpawnProxy", params);
  }
  
  /**
   * Set Transfer Proxy
   */
  // tslint:disable-next-line:max-line-length
  public setTransferProxy: SetTransferProxy = (...params) => {
    return this.request("setTransferProxy", params);
  }
  
  /**
   * Gets all pending transactions in the roller
   */
  // tslint:disable-next-line:max-line-length
  public getAllPending: GetAllPending = (...params) => {
    return this.request("getAllPending", params);
  }
  
  /**
   * Gets all pending transactions in the roller, by ship
   */
  // tslint:disable-next-line:max-line-length
  public getPendingByShip: GetPendingByShip = (...params) => {
    return this.request("getPendingByShip", params);
  }
  
  /**
   * Gets all pending transactions in the roller, by address
   */
  // tslint:disable-next-line:max-line-length
  public getPendingByAddress: GetPendingByAddress = (...params) => {
    return this.request("getPendingByAddress", params);
  }
  
  /**
   * Gets all spawned points by a star or galaxy
   */
  // tslint:disable-next-line:max-line-length
  public getSpawned: GetSpawned = (...params) => {
    return this.request("getSpawned", params);
  }
  
  /**
   * Timestamp of when the next L2 batch will be submitted
   */
  // tslint:disable-next-line:max-line-length
  public whenNextBatch: WhenNextBatch = (...params) => {
    return this.request("whenNextBatch", params);
  }
  
  /**
   * Status of an L2 transaction submitted to the Roller
   */
  // tslint:disable-next-line:max-line-length
  public getTransactionStatus: GetTransactionStatus = (...params) => {
    return this.request("getTransactionStatus", params);
  }
  
  /**
   * Returns status, hash and type of all L2 tx submitted by an ethereum address,
   */
  // tslint:disable-next-line:max-line-length
  public getHistory: GetHistory = (...params) => {
    return this.request("getHistory", params);
  }
  
  /**
   * Current nonce used by the Roller
   */
  // tslint:disable-next-line:max-line-length
  public getNonce: GetNonce = (...params) => {
    return this.request("getNonce", params);
  }
  
  /**
   * Cancels a transaction that hasn't been sent out
   */
  // tslint:disable-next-line:max-line-length
  public cancelTransaction: CancelTransaction = (...params) => {
    return this.request("cancelTransaction", params);
  }
  
  /**
   * Returns configuration parameters of the Roller
   */
  // tslint:disable-next-line:max-line-length
  public getRollerConfig: GetRollerConfig = (...params) => {
    return this.request("getRollerConfig", params);
  }
  
  /**
   * Naive Rollup DNSs
   */
  // tslint:disable-next-line:max-line-length
  public getDns: GetDns = (...params) => {
    return this.request("getDns", params);
  }
  
  /**
   * Returns an unsigned L2 transaction, ready to be signed
   */
  // tslint:disable-next-line:max-line-length
  public hashTransaction: HashTransaction = (...params) => {
    return this.request("hashTransaction", params);
  }
  
  /**
   * Returns all the ships controlled by an ethereum address as owner proxy
   */
  // tslint:disable-next-line:max-line-length
  public getOwnedPoints: GetOwnedPoints = (...params) => {
    return this.request("getOwnedPoints", params);
  }
  
  /**
   * Returns all the ships controlled by an ethereum address as transfer proxy
   */
  // tslint:disable-next-line:max-line-length
  public getTransferringFor: GetTransferringFor = (...params) => {
    return this.request("getTransferringFor", params);
  }
  
  /**
   * Returns all the ships controlled by an ethereum address as manager proxy
   */
  // tslint:disable-next-line:max-line-length
  public getManagerFor: GetManagerFor = (...params) => {
    return this.request("getManagerFor", params);
  }
  
  /**
   * Returns all the ships controlled by an ethereum address as voting proxy
   */
  // tslint:disable-next-line:max-line-length
  public getVotingFor: GetVotingFor = (...params) => {
    return this.request("getVotingFor", params);
  }
  
  /**
   * Returns all the ships controlled by an ethereum address as spawn proxy
   */
  // tslint:disable-next-line:max-line-length
  public getSpawningFor: GetSpawningFor = (...params) => {
    return this.request("getSpawningFor", params);
  }
  
}
export default RollerRPCAPI;
